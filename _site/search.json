[
  {
    "objectID": "Take Home Exercise/Take Home Exercise 1/Take_Home_Ex01.html",
    "href": "Take Home Exercise/Take Home Exercise 1/Take_Home_Ex01.html",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "",
    "text": "The locations of businesses and firms are central to urban development, influencing economic growth, job creation, and the availability of resources and services for residents and other businesses. Strategic locations provide competitive advantages, access to talent and infrastructure, and impact brand image and market positioning, while also shaping the city’s overall character and functionality by fostering specialized districts and facilitating efficient supply chains and employee commutes.\nStudying the spatio-temporal patterns of businesses and firms is crucial for urban development because it reveals how economic activity and urban forms evolve, enabling better urban planning, promoting sustainability, identifying urban inefficiencies, and enhancing quality of life. By understanding where and when businesses locate and operate, urban planners can design cities more effectively, anticipate growth, ensure resource efficiency, and tailor infrastructure to support economic vitality and community well-being."
  },
  {
    "objectID": "In-Class Exercise/In-class Exercise 4/In_Class_Ex04.html",
    "href": "In-Class Exercise/In-class Exercise 4/In_Class_Ex04.html",
    "title": "In-class Exercise 4: Interactive K-function",
    "section": "",
    "text": "pacman::p_load(sf, ggstatsplot, tmap, tidyverse, knitr, GWmodel)\n\n\n#hunan_sf &lt;- left_join(hunan_sf, hunan2012)\n\n\n#hunan_sp &lt;- hunan_sf %&gt;%\n  #as_Spatial()"
  },
  {
    "objectID": "In-Class Exercise/In-class Exercise 3/data/rawdata/Kepulauan_Bangka_Belitung.html",
    "href": "In-Class Exercise/In-class Exercise 3/data/rawdata/Kepulauan_Bangka_Belitung.html",
    "title": "ISSS626",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     \n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],MEMBER[“World Geodetic System 1984 (G2296)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html",
    "title": "ISSS626 Hands On Exercise 1",
    "section": "",
    "text": "Geospatial Data Science is a process of importing, wrangling, integrating, and processing geographically referenced data sets. In this hands-on exercise, you will learn how to perform geospatial data science tasks in R by using sf package.\nBy the end of this hands-on exercise, you should acquire the following competencies:\n\ninstalling and loading sf and tidyverse packages into R environment,\nimporting geospatial data by using appropriate functions of sf package,\nimporting aspatial data by using appropriate function of readr package,\nexploring the content of simple feature data frame by using appropriate Base R and sf functions,\nassigning or transforming coordinate systems by using using appropriate sf functions,\nconverting an aspatial data into a sf data frame by using appropriate function of sf package,\nperforming geoprocessing tasks by using appropriate functions of sf package,\nperforming data wrangling tasks by using appropriate functions of dplyr package and\nperforming Exploratory Data Analysis (EDA) by using appropriate functions from ggplot2 package.\n\n\n\n\nData are key to data analytics including geospatial analytics. Hence, before analysing, we need to assemble the necessary data. In this hands-on exercise, you are required to extract the necessary data sets from the following sources:\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb\n\nLoad packages:\n\nlibrary(pacman) \np_load(sf, tidyverse) \n\nReading data:\n\nmpsz = st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Hands-on_Ex/Hands-on_ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\ncyclingpath = st_read(dsn = \"data/geospatial\", layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Hands-on_Ex/Hands-on_ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 4651 features and 19 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11721.1 ymin: 27550.13 xmax: 42809.37 ymax: 49702.59\nProjected CRS: SVY21\n\npreschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Hands-on_Ex/Hands-on_ex01/data/geospatial/PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\nThe column in the sf data.frame that contains the geometries is a list of class sfc. We can retrieve the geometry list-column in this case by mpsz$geom or mpsz[[1]], but the more general way uses st_geometry() as shown in the code chunk below.\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\n\n\n\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\n\n\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n\n\n\n\n\nplot(mpsz) \n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n\n\n\n\n\nplot(st_geometry(mpsz))\nplot(st_geometry(preschool), \n     add = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nAlthough mpsz data frame is projected in svy21 but when we read until the end of the print, it indicates that the EPSG is 9001. This is a wrong EPSG code because the correct EPSG code for svy21 should be 3414.\nIn order to assign the correct EPSG code to mpsz data frame, st_set_crs() of sf package is used as shown in the code chunk below.\n\nmpsz &lt;- st_set_crs(mpsz, 3414) \n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\n\nChecking CSR again\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\nIn geospatial analytics, it is very common for us to transform the original data from geographic coordinate system to projected coordinate system. This is because geographic coordinate system is not appropriate if the analysis need to use distance or/and area measurements.\nLet us take preschool simple feature data frame as an example. The print below reveals that it is in wgs84 coordinate system.\nGeometry set for 2290 features Geometry type: POINT Dimension: XYZ Bounding box: xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134 z_range: zmin: 0 zmax: 0 Geodetic CRS: WGS 84 First 5 geometries:\nThis is a scenario that st_set_crs() is not appropriate and st_transform() of sf package should be used. This is because we need to reproject preschool from one coordinate system to another coordinate system mathemetically.\nLet us perform the projection transformation by using the code chunk below.\n\npreschool &lt;- st_transform(preschool, \n                              crs = 3414)\n\nChecking crs of preschool again:\n\nst_crs(preschool)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNow, let us try to plot the preschool layer ontop of mpsz layer again by using the similar code chunk you used earlier.\n\nplot(st_geometry(mpsz))\nplot(st_geometry(preschool), add = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 3659 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (6): name, host_name, neighbourhood_group, neighbourhood, room_type, l...\ndbl  (11): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe code chunk below shows list() of Base R instead of glimpse() is used to do the job.\n\nlist(listings)\n\n[[1]]\n# A tibble: 3,659 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Ensuite …  367042 Belinda   East Region         Tampines          1.35\n 2  71896 B&B  Roo…  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Room 2-n…  367042 Belinda   East Region         Tampines          1.35\n 4 275343 10min wa… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 15 mins … 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 294281 5 mins w… 1521514 Elizabeth Central Region      Newton            1.31\n 7 324945 Comforta… 1439258 Kay       Central Region      Bukit Merah       1.29\n 8 330095 Relaxing… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 344803 Budget s…  367042 Belinda   East Region         Tampines          1.35\n10 369141 5mins fr… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,649 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\n\n\n\nThe code chunk below converts listing data frame into a simple feature data frame by using st_as_sf()of sf packages\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nThings to learn from the arguments above:\n\ncoords argument requires you to provide the column name of the x-coordinates first then followed by the column name of the y-coordinates.\ncrs argument requires you to provide the coordinates system in epsg format. EPSG: 4326 is wgs84 Geographic Coordinate System and EPSG: 3414 is Singapore SVY21 Projected Coordinate System. You can search for other country’s epsg code by referring to epsg.io.\n%&gt;% is used to nest st_transform() to transform the newly created simple feature data frame into svy21 projected coordinates system.\n\nLet us examine the content of this newly created simple feature data frame.\n\nglimpse(listings_sf)\n\nRows: 3,659\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 29…\n$ name                           &lt;chr&gt; \"Ensuite Room (Room 1 & 2) near EXPO\", …\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 143, NA, 76, NA, NA, 85, NA, NA, 41, 79…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 180, 180, 92, 180, 180, 92,…\n$ number_of_reviews              &lt;dbl&gt; 19, 24, 46, 20, 16, 131, 17, 5, 60, 81,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.12, 0.14, 0.27, 0.13, 0.10, 0.80, 0.1…\n$ calculated_host_listings_count &lt;dbl&gt; 5, 5, 5, 58, 58, 7, 58, 58, 5, 7, 7, 1,…\n$ availability_365               &lt;dbl&gt; 90, 79, 90, 153, 153, 365, 153, 153, 36…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, \"S039…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…\n\n\n\n\n\n\n\n\n\n\nThe authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the existing cycling path. You are tasked to determine the extend of the land need to be acquired and their total area.\nThe Solution\nFirstly, st_buffer() of sf package is used to compute the 5-meter buffers around cycling paths.\n\nbuffer_cycling &lt;- st_buffer(\n  cyclingpath, dist=5, nQuadSegs = 30)\n\nThis is followed by calculating the area of the buffers as shown in the code chunk below.\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\nbuffer_cycling &lt;- buffer_cycling %&gt;%\n  mutate(AREA = st_area(geometry))\n\nLastly, sum() of Base R will be used to derive the total land involved\n\nsum(buffer_cycling$AREA)\n\n3561648 [m^2]\n\n\nWe can also create a plot showing the buffer by a selected planning subzone.\nAssuming that we are interested on the land acquisition in Tampines West planning subzone.\nFirstly, filter() of dplyr package will be used to extract polygon feature of Tampines West by using the code chunk below.\n\nmpsz_selected &lt;- mpsz %&gt;%\n  filter(SUBZONE_N == \"TAMPINES WEST\") \n\nNext, st_intersection() of sf package will be used to clip cycling buffers within Tampines West planning subzone.\n\nbuffer_cycling &lt;- st_set_crs(buffer_cycling, 3414) \n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\nst_crs(buffer_cycling)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nbuffer_cycling_selected &lt;- st_intersection(\n  buffer_cycling, mpsz_selected)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\n\n\n\n\n\nThe authority requires a count of pre-schools for each planning subzone to support forward planning. Using R and the sf package, perform the necessary geoprocessing to compute these counts and present the results clearly.\nThe Solution\nThe code chunk below performs two operations at one go. Firstly, identify pre-schools located inside each Planning Subzone by using st_intersects(). Next, length() of Base R is used to calculate numbers of pre-schools that fall inside each planning subzone.\n\nmpsz$`PreSch Count`&lt;- lengths(st_intersects(mpsz, preschool))\n\nYou can check the summary statistics of the newly derived PreSch Count field by using summary() as shown in the code chunk below.\n\nsummary(mpsz$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nTo list the planning subzone with the most number of pre-school, the top_n() of dplyr package is used as shown in the code chunk below.\n\ntop_n(mpsz, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\nIn the code chunk below, another geoprocessing function of sf package called st_area() is used to derive the area of each planning subzone.\n\nmpsz$Area &lt;- mpsz %&gt;%\n  st_area()\n\nNext, mutate() of dplyr package is used to compute the density by using the code chunk below.\n\nmpsz &lt;- mpsz %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\n\nIn this section, you will visualise the derive variables by using appropriate Exploratory data Analysis methods of ggplot2.\nFirstly, we will plot a histogram to reveal the distribution of PreSch Density. Conventionally, hist() of R Graphics will be used as shown in the code chunk below.\n\nhist(mpsz$`PreSch Density`)\n\n\n\n\n\n\n\n\nAlthough the syntax is very easy to use however the output is far from meeting publication quality. Furthermore, the function has limited room for further customisation.\nIn the code chunk below, appropriate ggplot2 functions will be used.\n\nggplot(data=mpsz, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning subzones with a single pre-school, on the other hand, \\nthere are seven planning subzones with at least 30 or more pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\n\n\n\n\nggplot(data=mpsz, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#learning-outcome",
    "href": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#learning-outcome",
    "title": "ISSS626 Hands On Exercise 1",
    "section": "",
    "text": "Geospatial Data Science is a process of importing, wrangling, integrating, and processing geographically referenced data sets. In this hands-on exercise, you will learn how to perform geospatial data science tasks in R by using sf package.\nBy the end of this hands-on exercise, you should acquire the following competencies:\n\ninstalling and loading sf and tidyverse packages into R environment,\nimporting geospatial data by using appropriate functions of sf package,\nimporting aspatial data by using appropriate function of readr package,\nexploring the content of simple feature data frame by using appropriate Base R and sf functions,\nassigning or transforming coordinate systems by using using appropriate sf functions,\nconverting an aspatial data into a sf data frame by using appropriate function of sf package,\nperforming geoprocessing tasks by using appropriate functions of sf package,\nperforming data wrangling tasks by using appropriate functions of dplyr package and\nperforming Exploratory Data Analysis (EDA) by using appropriate functions from ggplot2 package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#data-acquisition",
    "href": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#data-acquisition",
    "title": "ISSS626 Hands On Exercise 1",
    "section": "",
    "text": "Data are key to data analytics including geospatial analytics. Hence, before analysing, we need to assemble the necessary data. In this hands-on exercise, you are required to extract the necessary data sets from the following sources:\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb\n\nLoad packages:\n\nlibrary(pacman) \np_load(sf, tidyverse) \n\nReading data:\n\nmpsz = st_read(dsn = \"data/geospatial\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Hands-on_Ex/Hands-on_ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\ncyclingpath = st_read(dsn = \"data/geospatial\", layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Hands-on_Ex/Hands-on_ex01/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 4651 features and 19 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11721.1 ymin: 27550.13 xmax: 42809.37 ymax: 49702.59\nProjected CRS: SVY21\n\npreschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Hands-on_Ex/Hands-on_ex01/data/geospatial/PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#checking-content",
    "href": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#checking-content",
    "title": "ISSS626 Hands On Exercise 1",
    "section": "",
    "text": "The column in the sf data.frame that contains the geometries is a list of class sfc. We can retrieve the geometry list-column in this case by mpsz$geom or mpsz[[1]], but the more general way uses st_geometry() as shown in the code chunk below.\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\n\n\n\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\n\n\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#plotting-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#plotting-geospatial-data",
    "title": "ISSS626 Hands On Exercise 1",
    "section": "",
    "text": "plot(mpsz) \n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n\n\n\n\n\nplot(st_geometry(mpsz))\nplot(st_geometry(preschool), \n     add = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#working-with-projection",
    "href": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#working-with-projection",
    "title": "ISSS626 Hands On Exercise 1",
    "section": "",
    "text": "st_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nAlthough mpsz data frame is projected in svy21 but when we read until the end of the print, it indicates that the EPSG is 9001. This is a wrong EPSG code because the correct EPSG code for svy21 should be 3414.\nIn order to assign the correct EPSG code to mpsz data frame, st_set_crs() of sf package is used as shown in the code chunk below.\n\nmpsz &lt;- st_set_crs(mpsz, 3414) \n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\n\nChecking CSR again\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\nIn geospatial analytics, it is very common for us to transform the original data from geographic coordinate system to projected coordinate system. This is because geographic coordinate system is not appropriate if the analysis need to use distance or/and area measurements.\nLet us take preschool simple feature data frame as an example. The print below reveals that it is in wgs84 coordinate system.\nGeometry set for 2290 features Geometry type: POINT Dimension: XYZ Bounding box: xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134 z_range: zmin: 0 zmax: 0 Geodetic CRS: WGS 84 First 5 geometries:\nThis is a scenario that st_set_crs() is not appropriate and st_transform() of sf package should be used. This is because we need to reproject preschool from one coordinate system to another coordinate system mathemetically.\nLet us perform the projection transformation by using the code chunk below.\n\npreschool &lt;- st_transform(preschool, \n                              crs = 3414)\n\nChecking crs of preschool again:\n\nst_crs(preschool)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNow, let us try to plot the preschool layer ontop of mpsz layer again by using the similar code chunk you used earlier.\n\nplot(st_geometry(mpsz))\nplot(st_geometry(preschool), add = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#import-and-converting-aspatial-data",
    "href": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#import-and-converting-aspatial-data",
    "title": "ISSS626 Hands On Exercise 1",
    "section": "",
    "text": "listings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 3659 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (6): name, host_name, neighbourhood_group, neighbourhood, room_type, l...\ndbl  (11): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nAfter importing the data file into R, it is important for us to examine if the data file has been imported correctly.\nThe code chunk below shows list() of Base R instead of glimpse() is used to do the job.\n\nlist(listings)\n\n[[1]]\n# A tibble: 3,659 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Ensuite …  367042 Belinda   East Region         Tampines          1.35\n 2  71896 B&B  Roo…  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Room 2-n…  367042 Belinda   East Region         Tampines          1.35\n 4 275343 10min wa… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 15 mins … 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 294281 5 mins w… 1521514 Elizabeth Central Region      Newton            1.31\n 7 324945 Comforta… 1439258 Kay       Central Region      Bukit Merah       1.29\n 8 330095 Relaxing… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 344803 Budget s…  367042 Belinda   East Region         Tampines          1.35\n10 369141 5mins fr… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,649 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\n\n\n\nThe code chunk below converts listing data frame into a simple feature data frame by using st_as_sf()of sf packages\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nThings to learn from the arguments above:\n\ncoords argument requires you to provide the column name of the x-coordinates first then followed by the column name of the y-coordinates.\ncrs argument requires you to provide the coordinates system in epsg format. EPSG: 4326 is wgs84 Geographic Coordinate System and EPSG: 3414 is Singapore SVY21 Projected Coordinate System. You can search for other country’s epsg code by referring to epsg.io.\n%&gt;% is used to nest st_transform() to transform the newly created simple feature data frame into svy21 projected coordinates system.\n\nLet us examine the content of this newly created simple feature data frame.\n\nglimpse(listings_sf)\n\nRows: 3,659\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 29…\n$ name                           &lt;chr&gt; \"Ensuite Room (Room 1 & 2) near EXPO\", …\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 143, NA, 76, NA, NA, 85, NA, NA, 41, 79…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 180, 180, 92, 180, 180, 92,…\n$ number_of_reviews              &lt;dbl&gt; 19, 24, 46, 20, 16, 131, 17, 5, 60, 81,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.12, 0.14, 0.27, 0.13, 0.10, 0.80, 0.1…\n$ calculated_host_listings_count &lt;dbl&gt; 5, 5, 5, 58, 58, 7, 58, 58, 5, 7, 7, 1,…\n$ availability_365               &lt;dbl&gt; 90, 79, 90, 153, 153, 365, 153, 153, 36…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, \"S039…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#geoprocessing-with-sf-package",
    "href": "Hands-on_Ex/Hands-on_ex01/Hands_On_Ex01.html#geoprocessing-with-sf-package",
    "title": "ISSS626 Hands On Exercise 1",
    "section": "",
    "text": "The authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the existing cycling path. You are tasked to determine the extend of the land need to be acquired and their total area.\nThe Solution\nFirstly, st_buffer() of sf package is used to compute the 5-meter buffers around cycling paths.\n\nbuffer_cycling &lt;- st_buffer(\n  cyclingpath, dist=5, nQuadSegs = 30)\n\nThis is followed by calculating the area of the buffers as shown in the code chunk below.\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\nbuffer_cycling &lt;- buffer_cycling %&gt;%\n  mutate(AREA = st_area(geometry))\n\nLastly, sum() of Base R will be used to derive the total land involved\n\nsum(buffer_cycling$AREA)\n\n3561648 [m^2]\n\n\nWe can also create a plot showing the buffer by a selected planning subzone.\nAssuming that we are interested on the land acquisition in Tampines West planning subzone.\nFirstly, filter() of dplyr package will be used to extract polygon feature of Tampines West by using the code chunk below.\n\nmpsz_selected &lt;- mpsz %&gt;%\n  filter(SUBZONE_N == \"TAMPINES WEST\") \n\nNext, st_intersection() of sf package will be used to clip cycling buffers within Tampines West planning subzone.\n\nbuffer_cycling &lt;- st_set_crs(buffer_cycling, 3414) \n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\nst_crs(buffer_cycling)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nbuffer_cycling_selected &lt;- st_intersection(\n  buffer_cycling, mpsz_selected)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n\n\n\n\n\n\n\nThe authority requires a count of pre-schools for each planning subzone to support forward planning. Using R and the sf package, perform the necessary geoprocessing to compute these counts and present the results clearly.\nThe Solution\nThe code chunk below performs two operations at one go. Firstly, identify pre-schools located inside each Planning Subzone by using st_intersects(). Next, length() of Base R is used to calculate numbers of pre-schools that fall inside each planning subzone.\n\nmpsz$`PreSch Count`&lt;- lengths(st_intersects(mpsz, preschool))\n\nYou can check the summary statistics of the newly derived PreSch Count field by using summary() as shown in the code chunk below.\n\nsummary(mpsz$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nTo list the planning subzone with the most number of pre-school, the top_n() of dplyr package is used as shown in the code chunk below.\n\ntop_n(mpsz, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\nIn the code chunk below, another geoprocessing function of sf package called st_area() is used to derive the area of each planning subzone.\n\nmpsz$Area &lt;- mpsz %&gt;%\n  st_area()\n\nNext, mutate() of dplyr package is used to compute the density by using the code chunk below.\n\nmpsz &lt;- mpsz %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\n\nIn this section, you will visualise the derive variables by using appropriate Exploratory data Analysis methods of ggplot2.\nFirstly, we will plot a histogram to reveal the distribution of PreSch Density. Conventionally, hist() of R Graphics will be used as shown in the code chunk below.\n\nhist(mpsz$`PreSch Density`)\n\n\n\n\n\n\n\n\nAlthough the syntax is very easy to use however the output is far from meeting publication quality. Furthermore, the function has limited room for further customisation.\nIn the code chunk below, appropriate ggplot2 functions will be used.\n\nggplot(data=mpsz, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning subzones with a single pre-school, on the other hand, \\nthere are seven planning subzones with at least 30 or more pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\n\n\n\n\nggplot(data=mpsz, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html",
    "title": "ISSS626 Hands On Exercise 5",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to compute Global Measures of Spatial Autocorrelation (GMSA) by using spdep package. By the end to this hands-on exercise, you will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdeppackage,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package.\n\nprovide statistically correct interpretation of GSA statistics.\n\n\n\n\nIn spatial policy, one of the main development objective of the local government and planners is to ensure equal distribution of development in the province. Our task in this study, hence, is to apply appropriate spatial statistical methods to discover if development are even distributed geographically. If the answer is No. Then, our next question will be “is there sign of spatial clustering?”. And, if the answer for this question is yes, then our next question will be “where are these clusters?”\nIn this case study, we are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Provice, People Republic of China.\n\n\n\nTwo data sets will be used in this hands-on exercise, they are:\n\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n\n\n\n\nBefore we get started, we need to ensure that spdep, sf, tmap and tidyverse packages of R are currently installed in your R.\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map.\n\nThe code chunk below is used to perform the following tasks:\n\ncreating a package list containing the necessary R packages,\nchecking if the R packages in the package list have been installed in R,\n\nif they have yet to be installed, RStudio will installed the missing packages,\n\nlaunching the packages into R environment.\n\n\npacman::p_load(sf, spdep, tmap, tidyverse)\n\n\nsetwd(\"/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Hands-on_Ex/Hands-on_ex05\")\n\n\n\n\n\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Hands-on_Ex/Hands-on_ex05/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyrpackage.\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\n\n\n\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nequal &lt;- tm_shape(hunan) +\n  tm_polygons(fill = \"GDPPC\",\n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 5,\n                values = \"brewer.blues\")) +\n  tm_borders(fiil_alpha = 0.5) + \n  tm_layout(legend.position = c(\"left\", \"bottom\"), \n            main.title = \"Equal interval classification\")\n\n[tm_borders()] Argument `fiil_alpha` unknown.\n[v3-&gt;v4] `tm_layout()`: use `tm_title()` instead of `tm_layout(main.title = )`\n\nquantile &lt;- tm_shape(hunan) +\n  tm_polygons(fill = \"GDPPC\",\n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5)) +\n  tm_borders(fiil_alpha = 0.5) + \n  tm_layout(legend.position = c(\"left\", \"bottom\"), \n            main.title = \"Quantile classification\")\n\n[tm_borders()] Argument `fiil_alpha` unknown.\n[v3-&gt;v4] `tm_layout()`: use `tm_title()` instead of `tm_layout(main.title = )`\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\nIn this section, you will learn how to compute global spatial autocorrelation statistics and to perform spatial complete randomness test for global spatial autocorrelation.\n\n\nBefore we can compute the global spatial autocorrelation statistics, we need to construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e. county) in the study area.\nIn the code chunk below, poly2nb() of spdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a “queen” argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours.\n\n\n\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n\n\n\n\nThe code chunk below performs Moran’s I statistical testing using moran.test() of spdep.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\n\nThe code chunk below performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\nIt is always a good practice for us the examine the simulated Moran’s I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram by using the code chunk below.\nIn the code chunk below hist() and abline() of R Graphics are used.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe code chunk below performs Geary’s C test for spatial autocorrelation by using geary.test() of spdep.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\n\nThe code chunk below performs permutation test for Geary’s C statistic by using geary.mc() of spdep\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\nNext, we will plot a histogram to reveal the distribution of the simulated values by using the code chunk below.\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n\n\n\n\n\n\n\n\n\n\n\n\nSpatial correlograms are great to examine patterns of spatial autocorrelation in your data or model residuals. They show how correlated are pairs of spatial observations when you increase the distance (lag) between them - they are plots of some index of autocorrelation (Moran’s I or Geary’s c) against distance.Although correlograms are not as fundamental as variograms (a keystone concept of geostatistics), they are very useful as an exploratory and descriptive tool. For this purpose they actually provide richer information than variograms.\n\n\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\n\n\n\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\n\n\n\nSimilar to the previous step, we will print out the analysis report by using the code chunk below.\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#overview",
    "href": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#overview",
    "title": "ISSS626 Hands On Exercise 5",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to compute Global Measures of Spatial Autocorrelation (GMSA) by using spdep package. By the end to this hands-on exercise, you will be able to:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute Global Spatial Autocorrelation (GSA) statistics by using appropriate functions of spdeppackage,\n\nplot Moran scatterplot,\ncompute and plot spatial correlogram using appropriate function of spdep package.\n\nprovide statistically correct interpretation of GSA statistics."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#the-analytical-question",
    "href": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#the-analytical-question",
    "title": "ISSS626 Hands On Exercise 5",
    "section": "",
    "text": "In spatial policy, one of the main development objective of the local government and planners is to ensure equal distribution of development in the province. Our task in this study, hence, is to apply appropriate spatial statistical methods to discover if development are even distributed geographically. If the answer is No. Then, our next question will be “is there sign of spatial clustering?”. And, if the answer for this question is yes, then our next question will be “where are these clusters?”\nIn this case study, we are interested to examine the spatial pattern of a selected development indicator (i.e. GDP per capita) of Hunan Provice, People Republic of China."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#study-area-and-data",
    "href": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#study-area-and-data",
    "title": "ISSS626 Hands On Exercise 5",
    "section": "",
    "text": "Two data sets will be used in this hands-on exercise, they are:\n\nHunan province administrative boundary layer at county level. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#setting-the-analytical-tools",
    "href": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#setting-the-analytical-tools",
    "title": "ISSS626 Hands On Exercise 5",
    "section": "",
    "text": "Before we get started, we need to ensure that spdep, sf, tmap and tidyverse packages of R are currently installed in your R.\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map.\n\nThe code chunk below is used to perform the following tasks:\n\ncreating a package list containing the necessary R packages,\nchecking if the R packages in the package list have been installed in R,\n\nif they have yet to be installed, RStudio will installed the missing packages,\n\nlaunching the packages into R environment.\n\n\npacman::p_load(sf, spdep, tmap, tidyverse)\n\n\nsetwd(\"/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Hands-on_Ex/Hands-on_ex05\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#getting-data-into-r-environment",
    "href": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#getting-data-into-r-environment",
    "title": "ISSS626 Hands On Exercise 5",
    "section": "",
    "text": "hunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Hands-on_Ex/Hands-on_ex05/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyrpackage.\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\n\n\n\n\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nequal &lt;- tm_shape(hunan) +\n  tm_polygons(fill = \"GDPPC\",\n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 5,\n                values = \"brewer.blues\")) +\n  tm_borders(fiil_alpha = 0.5) + \n  tm_layout(legend.position = c(\"left\", \"bottom\"), \n            main.title = \"Equal interval classification\")\n\n[tm_borders()] Argument `fiil_alpha` unknown.\n[v3-&gt;v4] `tm_layout()`: use `tm_title()` instead of `tm_layout(main.title = )`\n\nquantile &lt;- tm_shape(hunan) +\n  tm_polygons(fill = \"GDPPC\",\n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5)) +\n  tm_borders(fiil_alpha = 0.5) + \n  tm_layout(legend.position = c(\"left\", \"bottom\"), \n            main.title = \"Quantile classification\")\n\n[tm_borders()] Argument `fiil_alpha` unknown.\n[v3-&gt;v4] `tm_layout()`: use `tm_title()` instead of `tm_layout(main.title = )`\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#global-measures-of-spatial-autocorrelation-1",
    "href": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#global-measures-of-spatial-autocorrelation-1",
    "title": "ISSS626 Hands On Exercise 5",
    "section": "",
    "text": "In this section, you will learn how to compute global spatial autocorrelation statistics and to perform spatial complete randomness test for global spatial autocorrelation.\n\n\nBefore we can compute the global spatial autocorrelation statistics, we need to construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e. county) in the study area.\nIn the code chunk below, poly2nb() of spdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries. If you look at the documentation you will see that you can pass a “queen” argument that takes TRUE or FALSE as options. If you do not specify this argument the default is set to TRUE, that is, if you don’t specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.\nMore specifically, the code chunk below is used to compute Queen contiguity weight matrix.\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe summary report above shows that there are 88 area units in Hunan. The most connected area unit has 11 neighbours. There are two area units with only one neighbours.\n\n\n\nNext, we need to assign weights to each neighboring polygon. In our case, each neighboring polygon will be assigned equal weight (style=“W”). This is accomplished by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values. While this is the most intuitive way to summaries the neighbors’ values it has one drawback in that polygons along the edges of the study area will base their lagged values on fewer polygons thus potentially over- or under-estimating the true nature of the spatial autocorrelation in the data. For this example, we’ll stick with the style=“W” option for simplicity’s sake but note that other more robust options are available, notably style=“B”.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#global-measures-of-spatial-auto-correlation-morans-i",
    "href": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#global-measures-of-spatial-auto-correlation-morans-i",
    "title": "ISSS626 Hands On Exercise 5",
    "section": "",
    "text": "The code chunk below performs Moran’s I statistical testing using moran.test() of spdep.\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\n\nThe code chunk below performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\nIt is always a good practice for us the examine the simulated Moran’s I test statistics in greater detail. This can be achieved by plotting the distribution of the statistical values as a histogram by using the code chunk below.\nIn the code chunk below hist() and abline() of R Graphics are used.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\n\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#global-measures-of-spatial-autocorrelation-gearys-c",
    "href": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#global-measures-of-spatial-autocorrelation-gearys-c",
    "title": "ISSS626 Hands On Exercise 5",
    "section": "",
    "text": "The code chunk below performs Geary’s C test for spatial autocorrelation by using geary.test() of spdep.\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q   \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\n\nThe code chunk below performs permutation test for Geary’s C statistic by using geary.mc() of spdep\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\nNext, we will plot a histogram to reveal the distribution of the simulated values by using the code chunk below.\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\n\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\n\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#spatial-correlogram",
    "href": "Hands-on_Ex/Hands-on_ex05/Hands_On_Ex05.html#spatial-correlogram",
    "title": "ISSS626 Hands On Exercise 5",
    "section": "",
    "text": "Spatial correlograms are great to examine patterns of spatial autocorrelation in your data or model residuals. They show how correlated are pairs of spatial observations when you increase the distance (lag) between them - they are plots of some index of autocorrelation (Moran’s I or Geary’s c) against distance.Although correlograms are not as fundamental as variograms (a keystone concept of geostatistics), they are very useful as an exploratory and descriptive tool. For this purpose they actually provide richer information than variograms.\n\n\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\n\n\n\nBy plotting the output might not allow us to provide complete interpretation. This is because not all autocorrelation values are statistically significant. Hence, it is important for us to examine the full analysis report by printing out the analysis results as in the code chunk below.\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 6-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Geary’s C. The plot() of base Graph is then used to plot the output.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\n\n\n\nSimilar to the previous step, we will print out the analysis report by using the code chunk below.\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "In-Class Exercise/In-class Exercise 3/In_Class_Ex03a.html",
    "href": "In-Class Exercise/In-class Exercise 3/In_Class_Ex03a.html",
    "title": "In-class Exercise 3: Interactive K-function",
    "section": "",
    "text": "pacman::p_load(sf, terra, spatstat, \n               tmap, rvest, tidyverse,\n               ggthemes, plotly)\nchildcare_sf &lt;- read_rds(\"data/rds/childcare_sf.rds\")\nchildcare_ppp &lt;- as.ppp(childcare_sf) %&gt;%\n  rjitter(retry = TRUE,\n          nsim = 1,\n          drop = TRUE)\npg &lt;- mpsz_cl %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_cl %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_cl %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_cl %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\npg_owin = as.owin(pg)\ntm_owin = as.owin(tm)\nck_owin = as.owin(ck)\njw_owin = as.owin(jw)\nchildcare_pg_ppp = childcare_ppp[pg_owin]\nchildcare_tm_ppp = childcare_ppp[tm_owin]\nchildcare_ck_ppp = childcare_ppp[ck_owin]\nchildcare_jw_ppp = childcare_ppp[jw_owin]"
  },
  {
    "objectID": "In-Class Exercise/In-class Exercise 3/In_Class_Ex03a.html#building-an-interative-plot-with-ggplotly",
    "href": "In-Class Exercise/In-class Exercise 3/In_Class_Ex03a.html#building-an-interative-plot-with-ggplotly",
    "title": "In-class Exercise 3: Interactive K-function",
    "section": "Building an interative plot with ggplotly",
    "text": "Building an interative plot with ggplotly\nThe previous code chunks uses plot() to visualise the envelopes of the second-order summary statistics (such as L-function). The output is a static plot, therefore it can be difficult to make accurate guesstimates of the statistics and the corresponding distance, r.\nThe below code chunk converts the output (which is in a list form) into a dataframe, which can be used to generate a similar plot using appropriate aesthetic mappings from ggplot package. Finally, ggplotly() is used to convert the ggplot into an interactive plotly visualisation.\nThe codes were referenced from a R-blogger article. Further modifications were made to enhance the user experience by customizing the tooltips for greater clarity and intuition.\n\ntitle &lt;- \"Pairwise Distance: L function\"\n\nLcsr_df &lt;- as.data.frame(L_tm.csr)\n\ncolour=c(\"#0D657D\",\"#ee770d\",\"#D3D3D3\")\ncsr_plot &lt;- ggplot(Lcsr_df, aes(r, obs-r))+\n  # plot observed value\n  geom_line(colour=c(\"#4d4d4d\"))+\n  geom_line(aes(r,theo-r), colour=\"red\", linetype = \"dashed\")+\n  # plot simulation envelopes\n  geom_ribbon(aes(ymin=lo-r,ymax=hi-r),alpha=0.1, colour=c(\"#91bfdb\")) +\n  xlab(\"Distance r (m)\") +\n  ylab(\"L(r)-r\") +\n  geom_rug(data=Lcsr_df[Lcsr_df$obs &gt; Lcsr_df$hi,], sides=\"b\", colour=colour[1])  +\n  geom_rug(data=Lcsr_df[Lcsr_df$obs &lt; Lcsr_df$lo,], sides=\"b\", colour=colour[2]) +\n  geom_rug(data=Lcsr_df[Lcsr_df$obs &gt;= Lcsr_df$lo & Lcsr_df$obs &lt;= Lcsr_df$hi,], sides=\"b\", color=colour[3]) +\n  theme_tufte()+\n  ggtitle(title)\n\ntext1&lt;-\"Significant clustering\"\ntext2&lt;-\"Significant segregation\"\ntext3&lt;-\"Not significant clustering/segregation\"\n\n# the below conditional statement is required to ensure that the labels (text1/2/3) are assigned to the correct traces\nif (nrow(Lcsr_df[Lcsr_df$obs &gt; Lcsr_df$hi,])==0){ \n  if (nrow(Lcsr_df[Lcsr_df$obs &lt; Lcsr_df$lo,])==0){ \n    ggplotly(csr_plot, dynamicTicks=T) %&gt;%\n      style(text = text3, traces = 4) %&gt;%\n      rangeslider() \n  }else if (nrow(Lcsr_df[Lcsr_df$obs &gt;= Lcsr_df$lo & Lcsr_df$obs &lt;= Lcsr_df$hi,])==0){ \n    ggplotly(csr_plot, dynamicTicks=T) %&gt;%\n      style(text = text2, traces = 4) %&gt;%\n      rangeslider() \n  }else {\n    ggplotly(csr_plot, dynamicTicks=T) %&gt;%\n      style(text = text2, traces = 4) %&gt;%\n      style(text = text3, traces = 5) %&gt;%\n      rangeslider() \n  }\n} else if (nrow(Lcsr_df[Lcsr_df$obs &lt; Lcsr_df$lo,])==0){\n  if (nrow(Lcsr_df[Lcsr_df$obs &gt;= Lcsr_df$lo & Lcsr_df$obs &lt;= Lcsr_df$hi,])==0){\n    ggplotly(csr_plot, dynamicTicks=T) %&gt;%\n      style(text = text1, traces = 4) %&gt;%\n      rangeslider() \n  } else{\n    ggplotly(csr_plot, dynamicTicks=T) %&gt;%\n      style(text = text1, traces = 4) %&gt;%\n      style(text = text3, traces = 5) %&gt;%\n      rangeslider()\n  }\n} else{\n  ggplotly(csr_plot, dynamicTicks=T) %&gt;%\n    style(text = text1, traces = 4) %&gt;%\n    style(text = text2, traces = 5) %&gt;%\n    style(text = text3, traces = 6) %&gt;%\n    rangeslider()\n  }\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe main features of the above visualisation:\n\nThe observed and theoretical values of L(r)-r (including the upper and lower curves of the simulated envelope) can be found in the tooltip upon hovering the cursor over the geometry layers.\nThe range slider below the plot enables users to pan and zoom in to a specific range of distance.\nThe colored bands at the bottom of the line graph gives a clearer indication of significant or insignificant spatial segregation/ clustering at distance r. Dark green bands indicate significant clustering, orange indicate significant segregation, while grey indicates insignificant clustering/segregation.\nTooltips were added to provide color legend information."
  },
  {
    "objectID": "Take Home Exercise/Take Home Exercise 1/Take_Home_Ex01.html#reading-data",
    "href": "Take Home Exercise/Take Home Exercise 1/Take_Home_Ex01.html#reading-data",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "Reading data",
    "text": "Reading data\n\nlibrary(tcltk)\n\n\npacman::p_load(tidyverse, sf, tmap, httr, terra, spatstat, rvest, tidyverse, stpp, sparr)\n\n\nsetwd(\"/Users/zishengwong/R Coding/ISSS626 Geospatial Analytics/Take Home Exercise/Take Home Exercise 1\")\nfolder_path &lt;- \"./data/aspatial/acra\"\n\n\nfile_list &lt;- list.files(path = folder_path,\n                        pattern = \"^ACRA*.*\\\\.csv$\",\n                        full.names = TRUE)\n\nacra_data &lt;- file_list %&gt;%\n  map_dfr(read_csv)\n\nRows: 166348 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 90920 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 135478 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 70351 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 83190 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 66990 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 81783 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 90798 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 58738 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 65251 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 73983 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 89064 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 118925 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 57432 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 39336 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 21124 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 95595 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 11790 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 67792 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 224176 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 136758 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 23592 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 35777 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 55774 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 12396 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 36391 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 17183 Columns: 53\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (49): uen, issuance_agency_id, entity_name, entity_type_description, bu...\ndbl   (2): primary_ssic_code, no_of_officers\ndate  (2): registration_incorporation_date, uen_issue_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#write_rds(acra_data,\n#          \"data/rds/acra_data.rds\")\n\n\nacra_data &lt;- read_rds(\"./data/rds/acra_data.rds\")\n\n\nlibrary(tidyverse)\n\n# Count number of records by SSIC code\nssic_counts &lt;- acra_data %&gt;%\n  count(primary_ssic_code, sort = TRUE)\n\n# View top 20 SSIC codes with most records\nhead(ssic_counts, 20)\n\n# A tibble: 20 × 2\n   primary_ssic_code      n\n               &lt;dbl&gt;  &lt;int&gt;\n 1             46900 210383\n 2             70201 103016\n 3             64202  97902\n 4             62011  42870\n 5             47711  37488\n 6             41009  32778\n 7             43301  31730\n 8             62021  29380\n 9             49215  27381\n10             56111  26242\n11             85409  26107\n12             41001  25417\n13             96099  24693\n14             70209  19453\n15             56140  19389\n16             74191  19078\n17             56122  19022\n18             96022  18384\n19             46100  18095\n20             73100  17011"
  },
  {
    "objectID": "Take Home Exercise/Take Home Exercise 1/Take_Home_Ex01.html#restaurant-business",
    "href": "Take Home Exercise/Take Home Exercise 1/Take_Home_Ex01.html#restaurant-business",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "1. Restaurant Business",
    "text": "1. Restaurant Business\n\nTidying Data\n\nrest_biz_56111 &lt;- acra_data %&gt;%\n  select(1:24) %&gt;%\n  filter(primary_ssic_code == 56111) %&gt;%\n  rename(date = registration_incorporation_date) %&gt;%\n  mutate(date = as.Date(date),\n         YEAR = year(date),\n         MONTH_NUM = month(date),\n         MONTH_ABBR = month(date,\n                            label = TRUE,\n                            abbr = TRUE)) %&gt;%\n  mutate(\n    postal_code = str_pad(postal_code,\n                          width = 6, side = \"left\", pad = \"0\")) %&gt;%\n  filter(YEAR == 2025)\n\n\n\nGeocoding\n\npostcodes &lt;- unique(rest_biz_56111$postal_code)\nfound &lt;- data.frame()\nnot_found &lt;- data.frame(postcode = character())\nurl &lt;- \"https://onemap.gov.sg/api/common/elastic/search\"\n\n\nfor (pc in postcodes) {\n  query &lt;- list(\n    searchVal = pc,\n    returnGeom = \"Y\",\n    getAddrDetails = \"Y\",\n    pageNum = \"1\"\n  )\n  res &lt;- GET(url, query = query)\n  json &lt;- content(res)\n  if (json$found != 0) {\n    df &lt;- as.data.frame(json$results, stringAsFactors = FALSE)\n    df$input_postcode &lt;- pc\n    found &lt;- bind_rows(found, df)\n  } else {\n    not_found &lt;- bind_rows(not_found, data.frame(postcode = pc))\n  }\n}\n\n\nrest_biz_56111 = rest_biz_56111 %&gt;%\n  left_join(found,\n            by = c('postal_code' = 'POSTAL'),\n            relationship = \"many-to-many\")\n\n\nrest_biz_56111_sf &lt;- st_as_sf(rest_biz_56111,\n                         coords = c(\"X\",\"Y\"),\n                         crs=3414)\n\nSave rest_biz_56111_sf file\n\n#write_rds(rest_biz_56111_sf, \"data/rds/rest_biz_56111_sf.rds\")\n\n\n\nUnderstanding Data\n\nrest_biz_56111_sf &lt;- read_rds(\"data/rds/rest_biz_56111_sf.rds\")\n\n\nhead(rest_biz_56111_sf)\n\nSimple feature collection with 6 features and 125 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 27549.59 ymin: 31216.93 xmax: 37390.83 ymax: 46589.95\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 126\n  uen        issuance_agency_id entity_name               entity_type_descript…¹\n  &lt;chr&gt;      &lt;chr&gt;              &lt;chr&gt;                     &lt;chr&gt;                 \n1 202501136C ACRA               AL ASHIK PTE. LTD.        Local Company         \n2 202501329K ACRA               ARASH LEGACY PTE. LTD.    Local Company         \n3 202502902M ACRA               ADAM'S FAMILY CATERING P… Local Company         \n4 202503682G ACRA               ASWINS VEG RESTAURANT PT… Local Company         \n5 202504143K ACRA               ADIRAI KR BRIYANI PTE. L… Local Company         \n6 202504371R ACRA               AL YASSIN CAFE  (S) PTE.… Local Company         \n# ℹ abbreviated name: ¹​entity_type_description\n# ℹ 122 more variables: business_constitution_description &lt;chr&gt;,\n#   company_type_description &lt;chr&gt;, paf_constitution_description &lt;chr&gt;,\n#   entity_status_description &lt;chr&gt;, date &lt;date&gt;, uen_issue_date &lt;date&gt;,\n#   address_type &lt;chr&gt;, block &lt;chr&gt;, street_name &lt;chr&gt;, level_no &lt;chr&gt;,\n#   unit_no &lt;chr&gt;, building_name &lt;chr&gt;, postal_code &lt;chr&gt;,\n#   other_address_line1 &lt;chr&gt;, other_address_line2 &lt;chr&gt;, …\n\n\nNumber of businesses\n\n# number of businesses\nnrow(rest_biz_56111_sf)\n\n[1] 677\n\n\nPlotting data\n\nplot(rest_biz_56111_sf)\n\nWarning: plotting the first 9 out of 125 attributes; use max.plot = 125 to plot\nall\n\n\n\n\n\n\n\n\n\n\n\nConvert sf dataframe to ppp class\n\nrest_biz_56111_ppp &lt;- as.ppp(rest_biz_56111_sf)\n\nclass(rest_biz_56111_ppp)\n\n[1] \"ppp\"\n\n\n\n#summary(rest_biz_56111_ppp)\n\n\n\nCreate owin object\n\nmpsz_cl &lt;- read_rds(\"data/rds/mpsz_cl.rds\")\n\n\nsg_owin &lt;- as.owin(mpsz_cl)\n\n\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\n\nCombine point events object and owin object\n\nrest_biz_56111_ppp = rest_biz_56111_ppp[sg_owin]\n\n\nrest_biz_56111_ppp\n\nWarning: some mark values are NA in the point pattern x\n\n\nMarked planar point pattern: 677 points\nMark variables: \n   uen issuance_agency_id entity_name entity_type_description \nbusiness_constitution_description company_type_description \npaf_constitution_description entity_status_description date uen_issue_date \naddress_type block street_name level_no unit_no building_name postal_code \nother_address_line1 other_address_line2 account_due_date annual_return_date \nprimary_ssic_code primary_ssic_description primary_user_described_activity YEAR \nMONTH_NUM MONTH_ABBR SEARCHVAL BLK_NO ROAD_NAME BUILDING ADDRESS LATITUDE \nLONGITUDE input_postcode SEARCHVAL.1 BLK_NO.1 ROAD_NAME.1 BUILDING.1 ADDRESS.1 \nPOSTAL.1 X.1 Y.1 LATITUDE.1 LONGITUDE.1 SEARCHVAL.2 BLK_NO.2 ROAD_NAME.2 \nBUILDING.2 ADDRESS.2 POSTAL.2 X.2 Y.2 LATITUDE.2 LONGITUDE.2 SEARCHVAL.3 \nBLK_NO.3 ROAD_NAME.3 BUILDING.3 ADDRESS.3 POSTAL.3 X.3 Y.3 LATITUDE.3 \nLONGITUDE.3 SEARCHVAL.4 BLK_NO.4 ROAD_NAME.4 BUILDING.4 ADDRESS.4 POSTAL.4 X.4 \nY.4 LATITUDE.4 LONGITUDE.4 SEARCHVAL.5 BLK_NO.5 ROAD_NAME.5 BUILDING.5 \nADDRESS.5 POSTAL.5 X.5 Y.5 LATITUDE.5 LONGITUDE.5 SEARCHVAL.6 BLK_NO.6 \nROAD_NAME.6 BUILDING.6 ADDRESS.6 POSTAL.6 X.6 Y.6 LATITUDE.6 LONGITUDE.6 \nSEARCHVAL.7 BLK_NO.7 ROAD_NAME.7 BUILDING.7 ADDRESS.7 POSTAL.7 X.7 Y.7 \nLATITUDE.7 LONGITUDE.7 SEARCHVAL.8 BLK_NO.8 ROAD_NAME.8 BUILDING.8 ADDRESS.8 \nPOSTAL.8 X.8 Y.8 LATITUDE.8 LONGITUDE.8 SEARCHVAL.9 BLK_NO.9 ROAD_NAME.9 \nBUILDING.9 ADDRESS.9 POSTAL.9 X.9 Y.9 LATITUDE.9 LONGITUDE.9\nwindow: polygonal boundary\nenclosing rectangle: [2667.54, 55941.94] x [21448.47, 50256.33] units\n\n\n\n\nClark-Evan Test for Nearest Neighbour Analysis\nWithout CSR\n\nclarkevans.test(rest_biz_56111_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"))\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  rest_biz_56111_ppp\nR = 0.46636, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nWith CSR\n\nclarkevans.test(rest_biz_56111_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                method=\"MonteCarlo\",\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  rest_biz_56111_ppp\nR = 0.46636, p-value = 0.01\nalternative hypothesis: clustered (R &lt; 1)\n\n\nTaking a 95% confidence level, the Clark-Evans test showed that p-value were consistently below the threshold &lt; 0.05, indicating that restaurants are not randomly distributed.\n\n\nKernel Density Estimation\n\nrest_biz_56111_ppp_km &lt;- rescale.ppp(\n  rest_biz_56111_ppp, 1000, \"km\")\n\n\nrest_kde_SG_diggle &lt;- density(\n  rest_biz_56111_ppp_km,\n  sigma=bw.diggle,\n  edge=TRUE,\n  kernel=\"gaussian\") \n\n\nplot(rest_kde_SG_diggle)\n\n\n\n\n\n\n\n\n\nsummary(rest_kde_SG_diggle)\n\nreal-valued pixel image\n128 x 128 pixel array (ny, nx)\nenclosing rectangle: [2.667538, 55.94194] x [21.44847, 50.25633] km\ndimensions of each pixel: 0.416 x 0.2250614 km\nImage is defined on a subset of the rectangular grid\nSubset area = 669.941961122495 square km\nSubset area fraction = 0.437\nPixel values (inside window):\n    range = [-2.821452e-14, 160.1333]\n    integral = 677\n    mean = 1.010535\n\n\n\nbw &lt;- bw.diggle(rest_biz_56111_ppp_km)\nbw\n\n      sigma \n0.007046933 \n\n\nThis kernel density estimation (KDE) map displays the spatial intensity of restaurant (SSIC 56111) registrations in Singapore between January 2024 and June 2025. Using a Gaussian kernel with bandwidth selected via Diggle’s method (σ = 0.007 km), the analysis smooths the point distribution to highlight areas of higher concentration. The resulting density surface reveals clear hotspots in the central and downtown planning areas, particularly the CBD and surrounding commercial districts, where density values exceed 250 establishments per km². Peripheral residential and industrial zones exhibit much lower intensities, reflecting limited restaurant formation in those areas. The KDE thus suggests a strong central clustering of new restaurants, consistent with agglomeration economies and accessibility to consumer demand. As KDE is a smoothing technique, the visualization emphasizes general spatial patterns over exact point counts, making it well-suited for urban land-use and retail planning.\n\n\n2nd Order Spatial Point Pattern Analysis\n\nUsing K-Function\nComputing K-Function estimate\n\nK_rest = Kest(rest_biz_56111_ppp, correction = \"Ripley\")\nplot(K_rest, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of restaurants in Singapore are randomly distributed.\nH1= The distribution of restaurants in Singapore are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\nK_rest.csr &lt;- envelope(rest_biz_56111_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nWarning: some mark values are NA in the point pattern Y\n\n\nWarning: some mark values are NA in the point pattern object\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, \n[56:57 remaining, estimate finish 2025-09-23 11:12:33]\n3, \n[57:29 remaining, estimate finish 2025-09-23 11:13:42]\n4, \n[56:52 remaining, estimate finish 2025-09-23 11:13:40]\n5, \n[54:55 remaining, estimate finish 2025-09-23 11:12:17]\n6, \n[54:29 remaining, estimate finish 2025-09-23 11:12:26]\n7, \n[52:36 remaining, estimate finish 2025-09-23 11:11:03]\n8, \n[51:29 remaining, estimate finish 2025-09-23 11:10:27]\n9, \n[50:32 remaining, estimate finish 2025-09-23 11:10:02]\n10, \n[49:47 remaining, estimate finish 2025-09-23 11:09:50]\n11, \n[50:03 remaining, estimate finish 2025-09-23 11:10:45]\n12, \n[49:09 remaining, estimate finish 2025-09-23 11:10:23]\n13, \n[47:57 remaining, estimate finish 2025-09-23 11:09:40]\n14, \n[47:08 remaining, estimate finish 2025-09-23 11:09:21]\n15, \n[46:56 remaining, estimate finish 2025-09-23 11:09:47]\n16, \n[46:16 remaining, estimate finish 2025-09-23 11:09:39]\n17, \n[45:26 remaining, estimate finish 2025-09-23 11:09:19]\n18, \n[44:47 remaining, estimate finish 2025-09-23 11:09:12]\n19, \n[43:57 remaining, estimate finish 2025-09-23 11:08:52]\n20, \n[43:13 remaining, estimate finish 2025-09-23 11:08:38]\n21, \n[42:45 remaining, estimate finish 2025-09-23 11:08:44]\n22, \n[42:25 remaining, estimate finish 2025-09-23 11:09:00]\n23, \n[41:50 remaining, estimate finish 2025-09-23 11:08:57]\n24, \n[41:21 remaining, estimate finish 2025-09-23 11:09:02]\n25, \n[40:59 remaining, estimate finish 2025-09-23 11:09:17]\n26, \n[40:30 remaining, estimate finish 2025-09-23 11:09:23]\n27, \n[40:10 remaining, estimate finish 2025-09-23 11:09:41]\n28, \n[39:38 remaining, estimate finish 2025-09-23 11:09:44]\n29, \n[39:01 remaining, estimate finish 2025-09-23 11:09:38]\n30, \n[38:42 remaining, estimate finish 2025-09-23 11:09:59]\n31, \n[38:25 remaining, estimate finish 2025-09-23 11:10:22]\n32, \n[37:45 remaining, estimate finish 2025-09-23 11:10:14]\n33, \n[37:09 remaining, estimate finish 2025-09-23 11:10:11]\n34, \n[36:29 remaining, estimate finish 2025-09-23 11:10:02]\n35, \n[35:54 remaining, estimate finish 2025-09-23 11:09:59]\n36, \n[35:12 remaining, estimate finish 2025-09-23 11:09:47]\n37, \n[34:46 remaining, estimate finish 2025-09-23 11:09:57]\n38, \n[34:14 remaining, estimate finish 2025-09-23 11:10:00]\n39, \n[33:50 remaining, estimate finish 2025-09-23 11:10:16]\n40, \n[33:07 remaining, estimate finish 2025-09-23 11:10:01]\n41, \n[32:31 remaining, estimate finish 2025-09-23 11:09:57]\n42, \n[31:58 remaining, estimate finish 2025-09-23 11:09:58]\n43, \n[31:31 remaining, estimate finish 2025-09-23 11:10:10]\n44, \n[31:04 remaining, estimate finish 2025-09-23 11:10:22]\n45, \n[30:34 remaining, estimate finish 2025-09-23 11:10:30]\n46, \n[29:58 remaining, estimate finish 2025-09-23 11:10:25]\n47, \n[29:18 remaining, estimate finish 2025-09-23 11:10:14]\n48, \n[28:48 remaining, estimate finish 2025-09-23 11:10:21]\n49, \n[28:10 remaining, estimate finish 2025-09-23 11:10:13]\n50, \n[27:33 remaining, estimate finish 2025-09-23 11:10:07]\n51, \n[27:01 remaining, estimate finish 2025-09-23 11:10:11]\n52, \n[26:29 remaining, estimate finish 2025-09-23 11:10:14]\n53, \n[25:52 remaining, estimate finish 2025-09-23 11:10:07]\n54, \n[25:14 remaining, estimate finish 2025-09-23 11:09:57]\n55, \n[24:40 remaining, estimate finish 2025-09-23 11:09:56]\n56, \n[24:07 remaining, estimate finish 2025-09-23 11:09:58]\n57, \n[23:28 remaining, estimate finish 2025-09-23 11:09:47]\n58, \n[22:55 remaining, estimate finish 2025-09-23 11:09:48]\n59, \n[22:22 remaining, estimate finish 2025-09-23 11:09:49]\n60, \n[21:48 remaining, estimate finish 2025-09-23 11:09:47]\n61, \n[21:15 remaining, estimate finish 2025-09-23 11:09:48]\n62, \n[20:40 remaining, estimate finish 2025-09-23 11:09:45]\n63, \n[20:09 remaining, estimate finish 2025-09-23 11:09:52]\n64, \n[19:34 remaining, estimate finish 2025-09-23 11:09:49]\n65, \n[19:02 remaining, estimate finish 2025-09-23 11:09:52]\n66, \n[18:29 remaining, estimate finish 2025-09-23 11:09:54]\n67, \n[17:56 remaining, estimate finish 2025-09-23 11:09:55]\n68, \n[17:23 remaining, estimate finish 2025-09-23 11:09:57]\n69, \n[16:48 remaining, estimate finish 2025-09-23 11:09:55]\n70, \n[16:16 remaining, estimate finish 2025-09-23 11:09:59]\n71, \n[15:44 remaining, estimate finish 2025-09-23 11:10:04]\n72, \n[15:09 remaining, estimate finish 2025-09-23 11:10:01]\n73, \n[14:34 remaining, estimate finish 2025-09-23 11:09:56]\n74, \n[14:02 remaining, estimate finish 2025-09-23 11:10:01]\n75, \n[13:28 remaining, estimate finish 2025-09-23 11:10:01]\n76, \n[12:54 remaining, estimate finish 2025-09-23 11:10:01]\n77, \n[12:21 remaining, estimate finish 2025-09-23 11:09:59]\n78, \n[11:48 remaining, estimate finish 2025-09-23 11:10:03]\n79, \n[11:16 remaining, estimate finish 2025-09-23 11:10:11]\n80, \n[10:44 remaining, estimate finish 2025-09-23 11:10:23]\n81, \n[10:12 remaining, estimate finish 2025-09-23 11:10:33]\n82,  [9:38 remaining] 83,  [9:04 remaining] 84,  [8:30 remaining] 85,  [7:56 remaining] 86,  [7:22 remaining] 87,  [6:49 remaining] 88,  [6:15 remaining] 89,  [5:40 remaining] 90,  [5:06 remaining] 91,  [4:32 remaining] 92,  [3:58 remaining] 93,  [3:24 remaining] 94,  [2:50 remaining] 95,  [2:16 remaining] 96,  [1:42 remaining] 97,  [1:08 remaining] 98,  [34 sec remaining] \n99.\n\nDone.\n\n\n\nplot(K_rest.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\n\n\nUsing L-Function\nComputing L Function estimate\n\nL_rest = Lest(rest_biz_56111_ppp, correction = \"Ripley\")\nplot(L_rest, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of restaurants in Singapore are randomly distributed.\nH1= The distribution of restaurants in Singapore are not randomly distributed.\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.\n\nL_rest.csr &lt;- envelope(rest_biz_56111_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nWarning: some mark values are NA in the point pattern Y\n\n\nWarning: some mark values are NA in the point pattern object\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, \n[52:44 remaining, estimate finish 2025-09-23 12:06:19]\n3, \n[53:33 remaining, estimate finish 2025-09-23 12:07:42]\n4, \n[52:20 remaining, estimate finish 2025-09-23 12:07:01]\n5, \n[52:49 remaining, estimate finish 2025-09-23 12:08:05]\n6, \n[51:32 remaining, estimate finish 2025-09-23 12:07:20]\n7, \n[50:06 remaining, estimate finish 2025-09-23 12:06:24]\n8, \n[49:17 remaining, estimate finish 2025-09-23 12:06:06]\n9, \n[49:06 remaining, estimate finish 2025-09-23 12:06:29]\n10, \n[48:33 remaining, estimate finish 2025-09-23 12:06:29]\n11, \n[48:40 remaining, estimate finish 2025-09-23 12:07:13]\n12, \n[48:28 remaining, estimate finish 2025-09-23 12:07:37]\n13, \n[48:28 remaining, estimate finish 2025-09-23 12:08:16]\n14, \n[47:59 remaining, estimate finish 2025-09-23 12:08:21]\n15, \n[47:12 remaining, estimate finish 2025-09-23 12:08:05]\n16, \n[46:39 remaining, estimate finish 2025-09-23 12:08:07]\n17, \n[46:27 remaining, estimate finish 2025-09-23 12:08:33]\n18, \n[45:31 remaining, estimate finish 2025-09-23 12:08:06]\n19, \n[44:35 remaining, estimate finish 2025-09-23 12:07:38]\n20, \n[43:56 remaining, estimate finish 2025-09-23 12:07:31]\n21, \n[43:24 remaining, estimate finish 2025-09-23 12:07:33]\n22, \n[42:58 remaining, estimate finish 2025-09-23 12:07:42]\n23, \n[42:31 remaining, estimate finish 2025-09-23 12:07:51]\n24, \n[42:00 remaining, estimate finish 2025-09-23 12:07:55]\n25, \n[41:23 remaining, estimate finish 2025-09-23 12:07:50]\n26, \n[40:47 remaining, estimate finish 2025-09-23 12:07:47]\n27, \n[40:19 remaining, estimate finish 2025-09-23 12:07:55]\n28, \n[39:50 remaining, estimate finish 2025-09-23 12:08:00]\n29, \n[39:18 remaining, estimate finish 2025-09-23 12:08:02]\n30, \n[38:40 remaining, estimate finish 2025-09-23 12:07:57]\n31, \n[38:21 remaining, estimate finish 2025-09-23 12:08:17]\n32, \n[37:52 remaining, estimate finish 2025-09-23 12:08:24]\n33, \n[37:26 remaining, estimate finish 2025-09-23 12:08:36]\n34, \n[36:54 remaining, estimate finish 2025-09-23 12:08:40]\n35, \n[36:18 remaining, estimate finish 2025-09-23 12:08:36]\n36, \n[35:42 remaining, estimate finish 2025-09-23 12:08:34]\n37, \n[35:21 remaining, estimate finish 2025-09-23 12:08:54]\n38, \n[34:49 remaining, estimate finish 2025-09-23 12:08:58]\n39, \n[34:13 remaining, estimate finish 2025-09-23 12:08:55]\n40, \n[33:37 remaining, estimate finish 2025-09-23 12:08:52]\n41, \n[33:10 remaining, estimate finish 2025-09-23 12:09:03]\n42, \n[32:34 remaining, estimate finish 2025-09-23 12:09:02]\n43, \n[32:02 remaining, estimate finish 2025-09-23 12:09:05]\n44, \n[31:35 remaining, estimate finish 2025-09-23 12:09:18]\n45, \n[31:03 remaining, estimate finish 2025-09-23 12:09:23]\n46, \n[30:29 remaining, estimate finish 2025-09-23 12:09:23]\n47, \n[29:58 remaining, estimate finish 2025-09-23 12:09:30]\n48, \n[29:24 remaining, estimate finish 2025-09-23 12:09:32]\n49, \n[28:53 remaining, estimate finish 2025-09-23 12:09:39]\n50, \n[28:22 remaining, estimate finish 2025-09-23 12:09:45]\n51, \n[27:51 remaining, estimate finish 2025-09-23 12:09:53]\n52, \n[27:15 remaining, estimate finish 2025-09-23 12:09:50]\n53, \n[26:48 remaining, estimate finish 2025-09-23 12:10:06]\n54, \n[26:14 remaining, estimate finish 2025-09-23 12:10:09]\n55, \n[25:37 remaining, estimate finish 2025-09-23 12:10:06]\n56, \n[24:58 remaining, estimate finish 2025-09-23 12:09:56]\n57, \n[24:22 remaining, estimate finish 2025-09-23 12:09:53]\n58, \n[23:45 remaining, estimate finish 2025-09-23 12:09:49]\n59, \n[23:11 remaining, estimate finish 2025-09-23 12:09:50]\n60, \n[22:34 remaining, estimate finish 2025-09-23 12:09:44]\n61, \n[21:58 remaining, estimate finish 2025-09-23 12:09:40]\n62, \n[21:22 remaining, estimate finish 2025-09-23 12:09:38]\n63, \n[20:46 remaining, estimate finish 2025-09-23 12:09:34]\n64, \n[20:10 remaining, estimate finish 2025-09-23 12:09:29]\n65, \n[19:35 remaining, estimate finish 2025-09-23 12:09:28]\n66, \n[18:59 remaining, estimate finish 2025-09-23 12:09:24]\n67, \n[18:23 remaining, estimate finish 2025-09-23 12:09:19]\n68, \n[17:48 remaining, estimate finish 2025-09-23 12:09:19]\n69, \n[17:13 remaining, estimate finish 2025-09-23 12:09:16]\n70, \n[16:40 remaining, estimate finish 2025-09-23 12:09:22]\n71, \n[16:06 remaining, estimate finish 2025-09-23 12:09:22]\n72, \n[15:29 remaining, estimate finish 2025-09-23 12:09:13]\n73, \n[14:54 remaining, estimate finish 2025-09-23 12:09:12]\n74, \n[14:19 remaining, estimate finish 2025-09-23 12:09:09]\n75, \n[13:45 remaining, estimate finish 2025-09-23 12:09:08]\n76, \n[13:10 remaining, estimate finish 2025-09-23 12:09:09]\n77, \n[12:38 remaining, estimate finish 2025-09-23 12:09:16]\n78, \n[12:03 remaining, estimate finish 2025-09-23 12:09:16]\n79, \n[11:29 remaining, estimate finish 2025-09-23 12:09:18]\n80, \n[10:56 remaining, estimate finish 2025-09-23 12:09:23]\n81, \n[10:22 remaining, estimate finish 2025-09-23 12:09:29]\n82,  [9:49 remaining] 83,  [9:14 remaining] 84,  [8:40 remaining] 85,  [8:05 remaining] 86,  [7:31 remaining] 87,  [6:56 remaining] 88,  [6:22 remaining] 89,  [5:48 remaining] 90,  [5:13 remaining] 91,  [4:38 remaining] 92,  [4:04 remaining] 93,  [3:29 remaining] 94,  [2:54 remaining] 95,  [2:19 remaining] 96,  [1:44 remaining] 97,  [1:10 remaining] 98,  [35 sec remaining] \n99.\n\nDone.\n\n\n\nplot(L_rest.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\n\n\n\nSpatio-Temporal Point Patterns Analysis\nOverall Plot:\n\ntm_shape(mpsz_cl)+\n  tm_polygons() +\ntm_shape(rest_biz_56111_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\n\nVisualizing geographic distribution of restaurants by month\n\ntm_shape(mpsz_cl)+\n  tm_polygons() +\ntm_shape(rest_biz_56111_sf) +\n  tm_dots(size=0.1) +\n  tm_facets(by=\"MONTH_ABBR\", \n            free.coords=FALSE, \n            drop.units = TRUE)\n\n\n\n\n\n\n\n\n\n\nComputing STKDE by Month\n\nrest_month &lt;- rest_biz_56111_sf %&gt;%\n  select(MONTH_NUM)\n\n\n\nCreating PPP\n\nrest_month_ppp &lt;- as.ppp(rest_month)\nrest_month_ppp\n\nMarked planar point pattern: 677 points\nmarks are numeric, of storage type  'double'\nwindow: rectangle = [7514.99, 46829.34] x [26622.47, 49432.98] units\n\n\n\nsummary(rest_month_ppp)\n\nMarked planar point pattern:  677 points\nAverage intensity 7.549227e-07 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   2.000   4.000   3.885   6.000   7.000 \n\nWindow: rectangle = [7514.99, 46829.34] x [26622.47, 49432.98] units\n                    (39310 x 22810 units)\nWindow area = 896781000 square units\n\n\n\nany(duplicated(rest_month_ppp))\n\n[1] TRUE\n\n\n\n\nIncluding Owin object\n\nrest_month_owin &lt;- rest_month_ppp[sg_owin]\nsummary(rest_month_owin)\n\nMarked planar point pattern:  677 points\nAverage intensity 1.011177e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   2.000   4.000   3.885   6.000   7.000 \n\nWindow: polygonal boundary\n41 separate polygons (26 holes)\n                  vertices         area relative.area\npolygon 1              285  1.61128e+06      2.41e-03\npolygon 2               27  1.50315e+04      2.25e-05\npolygon 3 (hole)        41 -4.01660e+04     -6.00e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.64e-05\npolygon 5 (hole)         3 -4.14100e-04     -6.19e-13\npolygon 6               30  2.80002e+04      4.18e-05\npolygon 7 (hole)         4 -2.86396e-01     -4.28e-10\npolygon 8 (hole)         3 -1.81439e-04     -2.71e-13\npolygon 9 (hole)         3 -5.99531e-04     -8.95e-13\npolygon 10 (hole)        3 -3.04560e-04     -4.55e-13\npolygon 11 (hole)        3 -4.46108e-04     -6.66e-13\npolygon 12 (hole)        5 -2.44408e-04     -3.65e-13\npolygon 13 (hole)        5 -3.64686e-02     -5.45e-11\npolygon 14              71  8.18750e+03      1.22e-05\npolygon 15 (hole)       38 -7.79904e+03     -1.16e-05\npolygon 16              91  1.49663e+04      2.24e-05\npolygon 17 (hole)      395 -7.38124e+03     -1.10e-05\npolygon 18              40  1.38607e+04      2.07e-05\npolygon 19 (hole)       11 -8.36705e+01     -1.25e-07\npolygon 20 (hole)        3 -2.33435e-03     -3.49e-12\npolygon 21              45  2.51218e+03      3.75e-06\npolygon 22             139  3.22293e+03      4.81e-06\npolygon 23             148  3.10395e+03      4.64e-06\npolygon 24 (hole)        4 -1.72650e-04     -2.58e-13\npolygon 25              75  1.73526e+04      2.59e-05\npolygon 26              83  5.28920e+03      7.90e-06\npolygon 27             106  3.04104e+03      4.54e-06\npolygon 28              71  5.63061e+03      8.41e-06\npolygon 29              10  1.99717e+02      2.98e-07\npolygon 30 (hole)        3 -1.37223e-02     -2.05e-11\npolygon 31 (hole)        3 -8.68789e-04     -1.30e-12\npolygon 32 (hole)        3 -3.39815e-04     -5.08e-13\npolygon 33 (hole)        3 -4.52041e-05     -6.75e-14\npolygon 34 (hole)        3 -3.90173e-05     -5.83e-14\npolygon 35 (hole)        3 -9.59845e-05     -1.43e-13\npolygon 36 (hole)        8 -4.28707e-01     -6.40e-10\npolygon 37 (hole)        4 -2.18619e-04     -3.27e-13\npolygon 38 (hole)        6 -8.37554e-01     -1.25e-09\npolygon 39 (hole)        5 -2.92235e-04     -4.36e-13\npolygon 40           14053  6.67892e+08      9.98e-01\npolygon 41 (hole)        3 -7.43616e-06     -1.11e-14\nenclosing rectangle: [2667.54, 55941.94] x [21448.47, 50256.33] units\n                     (53270 x 28810 units)\nWindow area = 669517000 square units\nFraction of frame area: 0.436\n\n\n\nplot(rest_month_owin)\n\n\n\n\n\n\n\n\n\n\nCompute Spatio-temporal KDE\n\nrest_kde &lt;- spattemp.density(rest_month_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\nsummary(rest_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 1575.134 (spatial)\n  lambda = 0.0393 (temporal)\n\nNo. of observations\n  677 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [2667.538, 55941.94] x [21448.47, 50256.33]\n\nTemporal bound\n  [1, 7]\n\nEvaluation\n  128 x 128 x 7 trivariate lattice\n  Density range: [1.50514e-35, 5.14897e-08]\n\n\n\n\nPlotting spatio-temporal KDE object\n\ntims &lt;- c(1,2,3,4,5,6,7)\npar(mfcol=c(2,4))\nfor(i in tims){ \n  plot(rest_kde, i, \n       override.par=FALSE, \n       fix.range=TRUE, \n       main=paste(\"KDE at month\",i))\n}\n\n\n\n\n\n\n\n\n\n\nstpp Method\n\nrest_coords &lt;- st_coordinates(rest_biz_56111_sf)\n\n\nrest_df &lt;- data.frame(\n  x = rest_coords[, 1],  \n  y = rest_coords[, 2],\n  t = rest_biz_56111_sf$`date`)\n\n\nrest_stpp &lt;- as.3dpoints(rest_df)\n\n\nplot(rest_stpp)\n\n\n\n\n\n\n\n\n\n\nComputing spatio-temporal k-function\n\nrest_stik &lt;- STIKhat(rest_stpp)\n\nWarning: Space-time data contains duplicated points\n\n\n\nplotK(rest_stik)"
  },
  {
    "objectID": "Take Home Exercise/Take Home Exercise 1/Take_Home_Ex01.html#it-consultancy-business",
    "href": "Take Home Exercise/Take Home Exercise 1/Take_Home_Ex01.html#it-consultancy-business",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "2. IT Consultancy Business",
    "text": "2. IT Consultancy Business\n\nTidying Data\n\nIT_biz_62021 &lt;- acra_data %&gt;%\n  select(1:24) %&gt;%\n  filter(primary_ssic_code == 62021) %&gt;%\n  rename(date = registration_incorporation_date) %&gt;%\n  mutate(date = as.Date(date),\n         YEAR = year(date),\n         MONTH_NUM = month(date),\n         MONTH_ABBR = month(date,\n                            label = TRUE,\n                            abbr = TRUE)) %&gt;%\n  mutate(\n    postal_code = str_pad(postal_code,\n                          width = 6, side = \"left\", pad = \"0\")) %&gt;%\n  filter(YEAR == 2025)\n\n\n\nGeocoding\n\npostcodes &lt;- unique(IT_biz_62021$postal_code)\nfound &lt;- data.frame()\nnot_found &lt;- data.frame(postcode = character())\nurl &lt;- \"https://onemap.gov.sg/api/common/elastic/search\"\n\n\nfor (pc in postcodes) {\n  query &lt;- list(\n    searchVal = pc,\n    returnGeom = \"Y\",\n    getAddrDetails = \"Y\",\n    pageNum = \"1\"\n  )\n  res &lt;- GET(url, query = query)\n  json &lt;- content(res)\n  if (json$found != 0) {\n    df &lt;- as.data.frame(json$results, stringAsFactors = FALSE)\n    df$input_postcode &lt;- pc\n    found &lt;- bind_rows(found, df)\n  } else {\n    not_found &lt;- bind_rows(not_found, data.frame(postcode = pc))\n  }\n}\n\n\nIT_biz_62021 = IT_biz_62021 %&gt;%\n  left_join(found,\n            by = c('postal_code' = 'POSTAL'),\n            relationship = \"many-to-many\")\n\n\nIT_biz_62021_sf &lt;- st_as_sf(IT_biz_62021,\n                         coords = c(\"X\",\"Y\"),\n                         crs=3414)\n\nSave IT_biz_62021_sf file\n\n#write_rds(IT_biz_62021_sf, \"data/rds/IT_biz_62021_sf.rds\")\n\n\n\nUnderstanding Data\n\nIT_biz_62021_sf &lt;- read_rds(\"data/rds/IT_biz_62021_sf.rds\")\n\n\nhead(IT_biz_62021_sf)\n\nSimple feature collection with 6 features and 115 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 26060.88 ymin: 28954.42 xmax: 31115.4 ymax: 47195.49\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 116\n  uen        issuance_agency_id entity_name               entity_type_descript…¹\n  &lt;chr&gt;      &lt;chr&gt;              &lt;chr&gt;                     &lt;chr&gt;                 \n1 202500022N ACRA               AIDREO PTE. LTD.          Local Company         \n2 202500086N ACRA               APPSEDU  PTE. LTD.        Local Company         \n3 202501181K ACRA               AI WISE PTE. LTD.         Local Company         \n4 202501436E ACRA               ASSEMBLY SYNERGY PTE. LT… Local Company         \n5 202501708M ACRA               AVATARA PTE. LTD.         Local Company         \n6 202501821R ACRA               ASYAI PTE. LTD.           Local Company         \n# ℹ abbreviated name: ¹​entity_type_description\n# ℹ 112 more variables: business_constitution_description &lt;chr&gt;,\n#   company_type_description &lt;chr&gt;, paf_constitution_description &lt;chr&gt;,\n#   entity_status_description &lt;chr&gt;, date &lt;date&gt;, uen_issue_date &lt;date&gt;,\n#   address_type &lt;chr&gt;, block &lt;chr&gt;, street_name &lt;chr&gt;, level_no &lt;chr&gt;,\n#   unit_no &lt;chr&gt;, building_name &lt;chr&gt;, postal_code &lt;chr&gt;,\n#   other_address_line1 &lt;chr&gt;, other_address_line2 &lt;chr&gt;, …\n\n\nNumber of businesses\n\n# number of businesses\nnrow(IT_biz_62021_sf)\n\n[1] 950\n\n\nPlotting data\n\nplot(IT_biz_62021_sf)\n\nWarning: plotting the first 9 out of 115 attributes; use max.plot = 115 to plot\nall\n\n\n\n\n\n\n\n\n\n\n\nConvert sf dataframe to ppp class\n\nIT_biz_62021_ppp &lt;- as.ppp(IT_biz_62021_sf)\n\nclass(IT_biz_62021_ppp)\n\n[1] \"ppp\"\n\n\n\nsummary(IT_biz_62021_ppp)\n\nWarning: some mark values are NA in the point pattern object\n\n\nMarked planar point pattern:  950 points\nAverage intensity 1.331899e-06 points per square unit\n\nCoordinates are given to 10 decimal places\n\nMark variables: uen, issuance_agency_id, entity_name, entity_type_description, \nbusiness_constitution_description, company_type_description, \npaf_constitution_description, entity_status_description, date, uen_issue_date, \naddress_type, block, street_name, level_no, unit_no, building_name, \npostal_code, other_address_line1, other_address_line2, account_due_date, \nannual_return_date, primary_ssic_code, primary_ssic_description, \nprimary_user_described_activity, YEAR, MONTH_NUM, MONTH_ABBR, SEARCHVAL, \nBLK_NO, ROAD_NAME, BUILDING, ADDRESS, LATITUDE, LONGITUDE, SEARCHVAL.1, \nBLK_NO.1, ROAD_NAME.1, BUILDING.1, ADDRESS.1, POSTAL.1, X.1, Y.1, LATITUDE.1, \nLONGITUDE.1, input_postcode, SEARCHVAL.2, BLK_NO.2, ROAD_NAME.2, BUILDING.2, \nADDRESS.2, POSTAL.2, X.2, Y.2, LATITUDE.2, LONGITUDE.2, SEARCHVAL.3, BLK_NO.3, \nROAD_NAME.3, BUILDING.3, ADDRESS.3, POSTAL.3, X.3, Y.3, LATITUDE.3, \nLONGITUDE.3, SEARCHVAL.4, BLK_NO.4, ROAD_NAME.4, BUILDING.4, ADDRESS.4, \nPOSTAL.4, X.4, Y.4, LATITUDE.4, LONGITUDE.4, SEARCHVAL.5, BLK_NO.5, \nROAD_NAME.5, BUILDING.5, ADDRESS.5, POSTAL.5, X.5, Y.5, LATITUDE.5, \nLONGITUDE.5, SEARCHVAL.6, BLK_NO.6, ROAD_NAME.6, BUILDING.6, ADDRESS.6, \nPOSTAL.6, X.6, Y.6, LATITUDE.6, LONGITUDE.6, SEARCHVAL.7, BLK_NO.7, \nROAD_NAME.7, BUILDING.7, ADDRESS.7, POSTAL.7, X.7, Y.7, LATITUDE.7, \nLONGITUDE.7, SEARCHVAL.8, BLK_NO.8, ROAD_NAME.8, BUILDING.8, ADDRESS.8, \nPOSTAL.8, X.8, Y.8, LATITUDE.8, LONGITUDE.8\nSummary:\n     uen            issuance_agency_id entity_name       \n Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n entity_type_description business_constitution_description\n Length:950              Length:950                       \n Class :character        Class :character                 \n Mode  :character        Mode  :character                 \n                                                          \n                                                          \n                                                          \n                                                          \n company_type_description paf_constitution_description\n Length:950               Length:950                  \n Class :character         Class :character            \n Mode  :character         Mode  :character            \n                                                      \n                                                      \n                                                      \n                                                      \n entity_status_description      date            uen_issue_date      \n Length:950                Min.   :2025-01-01   Min.   :2025-01-01  \n Class :character          1st Qu.:2025-02-21   1st Qu.:2025-02-24  \n Mode  :character          Median :2025-04-15   Median :2025-04-15  \n                           Mean   :2025-04-14   Mean   :2025-04-14  \n                           3rd Qu.:2025-06-02   3rd Qu.:2025-06-02  \n                           Max.   :2025-07-31   Max.   :2025-07-31  \n                                                                    \n address_type          block           street_name          level_no        \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   unit_no          building_name      postal_code        other_address_line1\n Length:950         Length:950         Length:950         Length:950         \n Class :character   Class :character   Class :character   Class :character   \n Mode  :character   Mode  :character   Mode  :character   Mode  :character   \n                                                                             \n                                                                             \n                                                                             \n                                                                             \n other_address_line2 account_due_date   annual_return_date primary_ssic_code\n Length:950          Length:950         Length:950         Min.   :62021    \n Class :character    Class :character   Class :character   1st Qu.:62021    \n Mode  :character    Mode  :character   Mode  :character   Median :62021    \n                                                           Mean   :62021    \n                                                           3rd Qu.:62021    \n                                                           Max.   :62021    \n                                                                            \n primary_ssic_description primary_user_described_activity      YEAR     \n Length:950               Length:950                      Min.   :2025  \n Class :character         Class :character                1st Qu.:2025  \n Mode  :character         Mode  :character                Median :2025  \n                                                          Mean   :2025  \n                                                          3rd Qu.:2025  \n                                                          Max.   :2025  \n                                                                        \n   MONTH_NUM       MONTH_ABBR   SEARCHVAL            BLK_NO         \n Min.   :1.000   May    :158   Length:950         Length:950        \n 1st Qu.:2.000   Jan    :147   Class :character   Class :character  \n Median :4.000   Apr    :138   Mode  :character   Mode  :character  \n Mean   :3.953   Jul    :135                                        \n 3rd Qu.:6.000   Feb    :131                                        \n Max.   :7.000   Mar    :129                                        \n                 (Other):112                                        \n  ROAD_NAME           BUILDING           ADDRESS            LATITUDE        \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  LONGITUDE         SEARCHVAL.1          BLK_NO.1         ROAD_NAME.1       \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  BUILDING.1         ADDRESS.1           POSTAL.1             X.1           \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     Y.1             LATITUDE.1        LONGITUDE.1        input_postcode    \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n SEARCHVAL.2          BLK_NO.2         ROAD_NAME.2         BUILDING.2       \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  ADDRESS.2           POSTAL.2             X.2                Y.2           \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  LATITUDE.2        LONGITUDE.2        SEARCHVAL.3          BLK_NO.3        \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n ROAD_NAME.3         BUILDING.3         ADDRESS.3           POSTAL.3        \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     X.3                Y.3             LATITUDE.3        LONGITUDE.3       \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n SEARCHVAL.4          BLK_NO.4         ROAD_NAME.4         BUILDING.4       \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  ADDRESS.4           POSTAL.4             X.4                Y.4           \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  LATITUDE.4        LONGITUDE.4        SEARCHVAL.5          BLK_NO.5        \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n ROAD_NAME.5         BUILDING.5         ADDRESS.5           POSTAL.5        \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     X.5                Y.5             LATITUDE.5        LONGITUDE.5       \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n SEARCHVAL.6          BLK_NO.6         ROAD_NAME.6         BUILDING.6       \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  ADDRESS.6           POSTAL.6             X.6                Y.6           \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  LATITUDE.6        LONGITUDE.6        SEARCHVAL.7          BLK_NO.7        \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n ROAD_NAME.7         BUILDING.7         ADDRESS.7           POSTAL.7        \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     X.7                Y.7             LATITUDE.7        LONGITUDE.7       \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n SEARCHVAL.8          BLK_NO.8         ROAD_NAME.8         BUILDING.8       \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  ADDRESS.8           POSTAL.8             X.8                Y.8           \n Length:950         Length:950         Length:950         Length:950        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  LATITUDE.8        LONGITUDE.8       \n Length:950         Length:950        \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n\nWindow: rectangle = [8396.53, 43001.3] x [28409.52, 49021.35] units\n                    (34600 x 20610 units)\nWindow area = 713268000 square units\n\n\n\n\nCreate owin object\n\nmpsz_cl &lt;- read_rds(\"data/rds/mpsz_cl.rds\")\n\n\nsg_owin &lt;- as.owin(mpsz_cl)\n\n\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\n\nCombine point events object and owin object\n\nIT_biz_62021_ppp = IT_biz_62021_ppp[sg_owin]\n\n\nIT_biz_62021_ppp\n\nWarning: some mark values are NA in the point pattern x\n\n\nMarked planar point pattern: 950 points\nMark variables: \n   uen issuance_agency_id entity_name entity_type_description \nbusiness_constitution_description company_type_description \npaf_constitution_description entity_status_description date uen_issue_date \naddress_type block street_name level_no unit_no building_name postal_code \nother_address_line1 other_address_line2 account_due_date annual_return_date \nprimary_ssic_code primary_ssic_description primary_user_described_activity YEAR \nMONTH_NUM MONTH_ABBR SEARCHVAL BLK_NO ROAD_NAME BUILDING ADDRESS LATITUDE \nLONGITUDE SEARCHVAL.1 BLK_NO.1 ROAD_NAME.1 BUILDING.1 ADDRESS.1 POSTAL.1 X.1 \nY.1 LATITUDE.1 LONGITUDE.1 input_postcode SEARCHVAL.2 BLK_NO.2 ROAD_NAME.2 \nBUILDING.2 ADDRESS.2 POSTAL.2 X.2 Y.2 LATITUDE.2 LONGITUDE.2 SEARCHVAL.3 \nBLK_NO.3 ROAD_NAME.3 BUILDING.3 ADDRESS.3 POSTAL.3 X.3 Y.3 LATITUDE.3 \nLONGITUDE.3 SEARCHVAL.4 BLK_NO.4 ROAD_NAME.4 BUILDING.4 ADDRESS.4 POSTAL.4 X.4 \nY.4 LATITUDE.4 LONGITUDE.4 SEARCHVAL.5 BLK_NO.5 ROAD_NAME.5 BUILDING.5 \nADDRESS.5 POSTAL.5 X.5 Y.5 LATITUDE.5 LONGITUDE.5 SEARCHVAL.6 BLK_NO.6 \nROAD_NAME.6 BUILDING.6 ADDRESS.6 POSTAL.6 X.6 Y.6 LATITUDE.6 LONGITUDE.6 \nSEARCHVAL.7 BLK_NO.7 ROAD_NAME.7 BUILDING.7 ADDRESS.7 POSTAL.7 X.7 Y.7 \nLATITUDE.7 LONGITUDE.7 SEARCHVAL.8 BLK_NO.8 ROAD_NAME.8 BUILDING.8 ADDRESS.8 \nPOSTAL.8 X.8 Y.8 LATITUDE.8 LONGITUDE.8\nwindow: polygonal boundary\nenclosing rectangle: [2667.54, 55941.94] x [21448.47, 50256.33] units\n\n\n\n\nClark-Evan Test for Nearest Neighbour Analysis\nWithout CSR\n\nclarkevans.test(IT_biz_62021_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"))\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  IT_biz_62021_ppp\nR = 0.35105, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nWith CSR\n\nclarkevans.test(IT_biz_62021_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                method=\"MonteCarlo\",\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  IT_biz_62021_ppp\nR = 0.35105, p-value = 0.01\nalternative hypothesis: clustered (R &lt; 1)\n\n\nTaking a 95% confidence level, the Clark-Evans test showed that p-value were consistently below the threshold &lt; 0.05, indicating that restaurants are not randomly distributed.\n\n\nKernel Density Estimation\n\nIT_biz_62021_ppp_km &lt;- rescale.ppp(\n  IT_biz_62021_ppp, 1000, \"km\")\n\n\nit_kde_SG_diggle &lt;- density(\n  IT_biz_62021_ppp_km,\n  sigma=bw.diggle,\n  edge=TRUE,\n  kernel=\"gaussian\") \n\n\nplot(it_kde_SG_diggle)\n\n\n\n\n\n\n\n\n\nsummary(it_kde_SG_diggle)\n\nreal-valued pixel image\n128 x 128 pixel array (ny, nx)\nenclosing rectangle: [2.667538, 55.94194] x [21.44847, 50.25633] km\ndimensions of each pixel: 0.416 x 0.2250614 km\nImage is defined on a subset of the rectangular grid\nSubset area = 669.941961122495 square km\nSubset area fraction = 0.437\nPixel values (inside window):\n    range = [-1.182249e-13, 1131.608]\n    integral = 950\n    mean = 1.418033\n\n\n\nbw &lt;- bw.diggle(IT_biz_62021_ppp_km)\nbw\n\n      sigma \n0.007046933 \n\n\n\n\n2nd Order Spatial Point Pattern Analysis\n\nUsing K-Function\nComputing K-Function estimate\n\nK_it = Kest(IT_biz_62021_ppp, correction = \"Ripley\")\nplot(K_it, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of IT consultancy services in Singapore are randomly distributed.\nH1= The distribution of IT consultancy services in Singapore are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\nK_it.csr &lt;- envelope(IT_biz_62021_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nWarning: some mark values are NA in the point pattern Y\n\n\nWarning: some mark values are NA in the point pattern object\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, \n[1:48:24 remaining, estimate finish 2025-09-23 14:12:22]\n3, \n[1:45:06 remaining, estimate finish 2025-09-23 14:10:09]\n4, \n[1:46:17 remaining, estimate finish 2025-09-23 14:12:30]\n5, \n[1:45:04 remaining, estimate finish 2025-09-23 14:12:23]\n6, \n[1:44:28 remaining, estimate finish 2025-09-23 14:12:57]\n7, \n[1:44:44 remaining, estimate finish 2025-09-23 14:14:25]\n8, \n[1:43:49 remaining, estimate finish 2025-09-23 14:14:39]\n9, \n[1:43:26 remaining, estimate finish 2025-09-23 14:15:29]\n10, \n[1:42:34 remaining, estimate finish 2025-09-23 14:15:48]\n11, \n[1:40:53 remaining, estimate finish 2025-09-23 14:15:13]\n12, \n[1:39:40 remaining, estimate finish 2025-09-23 14:15:07]\n13, \n[1:37:55 remaining, estimate finish 2025-09-23 14:14:26]\n14, \n[1:36:48 remaining, estimate finish 2025-09-23 14:14:28]\n15, \n[1:36:13 remaining, estimate finish 2025-09-23 14:15:07]\n16, \n[1:35:33 remaining, estimate finish 2025-09-23 14:15:40]\n17, \n[1:33:51 remaining, estimate finish 2025-09-23 14:15:01]\n18, \n[1:33:15 remaining, estimate finish 2025-09-23 14:15:40]\n19, \n[1:32:44 remaining, estimate finish 2025-09-23 14:16:27]\n20, \n[1:31:23 remaining, estimate finish 2025-09-23 14:16:13]\n21, \n[1:30:02 remaining, estimate finish 2025-09-23 14:15:58]\n22, \n[1:28:51 remaining, estimate finish 2025-09-23 14:15:56]\n23, \n[1:27:19 remaining, estimate finish 2025-09-23 14:15:27]\n24, \n[1:26:50 remaining, estimate finish 2025-09-23 14:16:19]\n25, \n[1:25:51 remaining, estimate finish 2025-09-23 14:16:33]\n26, \n[1:24:22 remaining, estimate finish 2025-09-23 14:16:07]\n27, \n[1:23:02 remaining, estimate finish 2025-09-23 14:15:52]\n28, \n[1:21:48 remaining, estimate finish 2025-09-23 14:15:46]\n29, \n[1:20:20 remaining, estimate finish 2025-09-23 14:15:19]\n30, \n[1:19:23 remaining, estimate finish 2025-09-23 14:15:35]\n31, \n[1:18:16 remaining, estimate finish 2025-09-23 14:15:40]\n32, \n[1:17:01 remaining, estimate finish 2025-09-23 14:15:30]\n33, \n[1:15:57 remaining, estimate finish 2025-09-23 14:15:38]\n34, \n[1:14:39 remaining, estimate finish 2025-09-23 14:15:24]\n35, \n[1:13:44 remaining, estimate finish 2025-09-23 14:15:45]\n36, \n[1:12:44 remaining, estimate finish 2025-09-23 14:16:00]\n37, \n[1:11:40 remaining, estimate finish 2025-09-23 14:16:08]\n38, \n[1:10:16 remaining, estimate finish 2025-09-23 14:15:45]\n39, \n[1:09:09 remaining, estimate finish 2025-09-23 14:15:48]\n40, \n[1:08:02 remaining, estimate finish 2025-09-23 14:15:52]\n41, \n[1:07:04 remaining, estimate finish 2025-09-23 14:16:10]\n42, \n[1:05:51 remaining, estimate finish 2025-09-23 14:16:04]\n43, \n[1:04:42 remaining, estimate finish 2025-09-23 14:16:04]\n44, \n[1:03:28 remaining, estimate finish 2025-09-23 14:15:56]\n45, \n[1:02:11 remaining, estimate finish 2025-09-23 14:15:43]\n46, \n[1:01:04 remaining, estimate finish 2025-09-23 14:15:46]\n47, \n[59:45 remaining, estimate finish 2025-09-23 14:15:27]\n48, \n[58:33 remaining, estimate finish 2025-09-23 14:15:21]\n49, \n[57:13 remaining, estimate finish 2025-09-23 14:15:00]\n50, \n[55:50 remaining, estimate finish 2025-09-23 14:14:32]\n51, \n[54:31 remaining, estimate finish 2025-09-23 14:14:10]\n52, \n[53:21 remaining, estimate finish 2025-09-23 14:14:05]\n53, \n[52:19 remaining, estimate finish 2025-09-23 14:14:19]\n54, \n[51:08 remaining, estimate finish 2025-09-23 14:14:13]\n55, \n[50:00 remaining, estimate finish 2025-09-23 14:14:12]\n56, \n[48:47 remaining, estimate finish 2025-09-23 14:14:02]\n57, \n[47:39 remaining, estimate finish 2025-09-23 14:14:02]\n58, \n[46:36 remaining, estimate finish 2025-09-23 14:14:15]\n59, \n[45:34 remaining, estimate finish 2025-09-23 14:14:29]\n60, \n[44:32 remaining, estimate finish 2025-09-23 14:14:45]\n61, \n[43:23 remaining, estimate finish 2025-09-23 14:14:45]\n62, \n[42:12 remaining, estimate finish 2025-09-23 14:14:38]\n63, \n[41:11 remaining, estimate finish 2025-09-23 14:14:58]\n64, \n[40:05 remaining, estimate finish 2025-09-23 14:15:04]\n65, \n[38:54 remaining, estimate finish 2025-09-23 14:14:58]\n66, \n[37:48 remaining, estimate finish 2025-09-23 14:15:06]\n67, \n[36:42 remaining, estimate finish 2025-09-23 14:15:14]\n68, \n[35:32 remaining, estimate finish 2025-09-23 14:15:11]\n69, \n[34:24 remaining, estimate finish 2025-09-23 14:15:14]\n70, \n[33:14 remaining, estimate finish 2025-09-23 14:15:09]\n71, \n[32:06 remaining, estimate finish 2025-09-23 14:15:12]\n72, \n[31:01 remaining, estimate finish 2025-09-23 14:15:24]\n73, \n[29:50 remaining, estimate finish 2025-09-23 14:15:18]\n74, \n[28:42 remaining, estimate finish 2025-09-23 14:15:21]\n75, \n[27:33 remaining, estimate finish 2025-09-23 14:15:22]\n76, \n[26:23 remaining, estimate finish 2025-09-23 14:15:18]\n77, \n[25:17 remaining, estimate finish 2025-09-23 14:15:27]\n78, \n[24:07 remaining, estimate finish 2025-09-23 14:15:24]\n79, \n[22:58 remaining, estimate finish 2025-09-23 14:15:25]\n80, \n[21:49 remaining, estimate finish 2025-09-23 14:15:21]\n81, \n[20:41 remaining, estimate finish 2025-09-23 14:15:25]\n82, \n[19:31 remaining, estimate finish 2025-09-23 14:15:22]\n83, \n[18:22 remaining, estimate finish 2025-09-23 14:15:24]\n84, \n[17:15 remaining, estimate finish 2025-09-23 14:15:34]\n85, \n[16:07 remaining, estimate finish 2025-09-23 14:15:37]\n86, \n[14:57 remaining, estimate finish 2025-09-23 14:15:31]\n87, \n[13:47 remaining, estimate finish 2025-09-23 14:15:29]\n88, \n[12:40 remaining, estimate finish 2025-09-23 14:15:38]\n89, \n[11:31 remaining, estimate finish 2025-09-23 14:15:45]\n90, \n[10:22 remaining, estimate finish 2025-09-23 14:15:43]\n91,  [9:13 remaining] 92,  [8:04 remaining] 93,  [6:55 remaining] 94,  [5:46 remaining] 95,  [4:36 remaining] 96,  [3:27 remaining] 97,  [2:18 remaining] 98,  [1:09 remaining] \n99.\n\nDone.\n\n\n\nplot(K_it.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\n\n\nUsing L-Function\nComputing L Function estimate\n\nL_it = Lest(IT_biz_62021_ppp, correction = \"Ripley\")\nplot(L_it, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of IT consultancy services in Singapore are randomly distributed.\nH1= The distribution of IT consultancy services in Singapore are not randomly distributed.\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.\n\nL_it.csr &lt;- envelope(IT_biz_62021_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nWarning: some mark values are NA in the point pattern Y\n\n\nWarning: some mark values are NA in the point pattern object\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, \n[1:36:04 remaining, estimate finish 2025-09-23 15:59:20]\n3, \n[1:31:58 remaining, estimate finish 2025-09-23 15:56:09]\n4, \n[1:33:28 remaining, estimate finish 2025-09-23 15:58:42]\n5, \n[1:33:52 remaining, estimate finish 2025-09-23 16:00:08]\n6, \n[1:35:51 remaining, estimate finish 2025-09-23 16:03:16]\n7, \n[1:36:20 remaining, estimate finish 2025-09-23 16:04:53]\n8, \n[1:35:06 remaining, estimate finish 2025-09-23 16:04:42]\n9, \n[1:35:49 remaining, estimate finish 2025-09-23 16:06:36]\n10, \n[1:34:42 remaining, estimate finish 2025-09-23 16:06:33]\n11, \n[1:36:30 remaining, estimate finish 2025-09-23 16:09:44]\n12, \n[1:35:58 remaining, estimate finish 2025-09-23 16:10:23]\n13, \n[1:36:01 remaining, estimate finish 2025-09-23 16:11:41]\n14, \n[1:35:20 remaining, estimate finish 2025-09-23 16:12:11]\n15, \n[1:33:39 remaining, estimate finish 2025-09-23 16:11:32]\n16, \n[1:32:42 remaining, estimate finish 2025-09-23 16:11:43]\n17, \n[1:31:17 remaining, estimate finish 2025-09-23 16:11:22]\n18, \n[1:31:02 remaining, estimate finish 2025-09-23 16:12:25]\n19, \n[1:29:29 remaining, estimate finish 2025-09-23 16:11:53]\n20, \n[1:29:08 remaining, estimate finish 2025-09-23 16:12:50]\n21, \n[1:28:24 remaining, estimate finish 2025-09-23 16:13:21]\n22, \n[1:27:22 remaining, estimate finish 2025-09-23 16:13:28]\n23, \n[1:26:05 remaining, estimate finish 2025-09-23 16:13:17]\n24, \n[1:24:58 remaining, estimate finish 2025-09-23 16:13:18]\n25, \n[1:23:49 remaining, estimate finish 2025-09-23 16:13:17]\n26, \n[1:22:25 remaining, estimate finish 2025-09-23 16:12:55]\n27, \n[1:21:34 remaining, estimate finish 2025-09-23 16:13:18]\n28, \n[1:20:42 remaining, estimate finish 2025-09-23 16:13:40]\n29, \n[1:19:43 remaining, estimate finish 2025-09-23 16:13:52]\n30, \n[1:18:58 remaining, estimate finish 2025-09-23 16:14:26]\n31, \n[1:18:04 remaining, estimate finish 2025-09-23 16:14:48]\n32, \n[1:17:00 remaining, estimate finish 2025-09-23 16:14:54]\n33, \n[1:15:34 remaining, estimate finish 2025-09-23 16:14:30]\n34, \n[1:14:32 remaining, estimate finish 2025-09-23 16:14:39]\n35, \n[1:13:33 remaining, estimate finish 2025-09-23 16:14:54]\n36, \n[1:12:36 remaining, estimate finish 2025-09-23 16:15:13]\n37, \n[1:11:32 remaining, estimate finish 2025-09-23 16:15:21]\n38, \n[1:10:44 remaining, estimate finish 2025-09-23 16:15:55]\n39, \n[1:09:38 remaining, estimate finish 2025-09-23 16:16:00]\n40, \n[1:08:24 remaining, estimate finish 2025-09-23 16:15:54]\n41, \n[1:07:26 remaining, estimate finish 2025-09-23 16:16:13]\n42, \n[1:06:03 remaining, estimate finish 2025-09-23 16:15:49]\n43, \n[1:04:42 remaining, estimate finish 2025-09-23 16:15:31]\n44, \n[1:03:38 remaining, estimate finish 2025-09-23 16:15:40]\n45, \n[1:02:37 remaining, estimate finish 2025-09-23 16:15:55]\n46, \n[1:01:25 remaining, estimate finish 2025-09-23 16:15:51]\n47, \n[1:00:09 remaining, estimate finish 2025-09-23 16:15:39]\n48, \n[59:05 remaining, estimate finish 2025-09-23 16:15:48]\n49, \n[58:01 remaining, estimate finish 2025-09-23 16:16:00]\n50, \n[56:48 remaining, estimate finish 2025-09-23 16:15:53]\n51, \n[55:43 remaining, estimate finish 2025-09-23 16:16:01]\n52, \n[54:37 remaining, estimate finish 2025-09-23 16:16:10]\n53, \n[53:37 remaining, estimate finish 2025-09-23 16:16:30]\n54, \n[52:32 remaining, estimate finish 2025-09-23 16:16:41]\n55, \n[51:23 remaining, estimate finish 2025-09-23 16:16:43]\n56, \n[50:03 remaining, estimate finish 2025-09-23 16:16:21]\n57, \n[48:44 remaining, estimate finish 2025-09-23 16:15:58]\n58, \n[47:25 remaining, estimate finish 2025-09-23 16:15:37]\n59, \n[46:10 remaining, estimate finish 2025-09-23 16:15:23]\n60, \n[44:56 remaining, estimate finish 2025-09-23 16:15:11]\n61, \n[43:46 remaining, estimate finish 2025-09-23 16:15:09]\n62, \n[42:46 remaining, estimate finish 2025-09-23 16:15:32]\n63, \n[41:43 remaining, estimate finish 2025-09-23 16:15:51]\n64, \n[40:36 remaining, estimate finish 2025-09-23 16:15:57]\n65, \n[39:23 remaining, estimate finish 2025-09-23 16:15:46]\n66, \n[38:12 remaining, estimate finish 2025-09-23 16:15:44]\n67, \n[37:07 remaining, estimate finish 2025-09-23 16:15:57]\n68, \n[35:57 remaining, estimate finish 2025-09-23 16:15:55]\n69, \n[34:48 remaining, estimate finish 2025-09-23 16:15:57]\n70, \n[33:37 remaining, estimate finish 2025-09-23 16:15:52]\n71, \n[32:31 remaining, estimate finish 2025-09-23 16:16:05]\n72, \n[31:25 remaining, estimate finish 2025-09-23 16:16:19]\n73, \n[30:19 remaining, estimate finish 2025-09-23 16:16:34]\n74, \n[29:11 remaining, estimate finish 2025-09-23 16:16:40]\n75, \n[28:02 remaining, estimate finish 2025-09-23 16:16:44]\n76, \n[26:52 remaining, estimate finish 2025-09-23 16:16:44]\n77, \n[25:43 remaining, estimate finish 2025-09-23 16:16:51]\n78, \n[24:33 remaining, estimate finish 2025-09-23 16:16:48]\n79, \n[23:25 remaining, estimate finish 2025-09-23 16:17:00]\n80, \n[22:15 remaining, estimate finish 2025-09-23 16:17:00]\n81, \n[21:06 remaining, estimate finish 2025-09-23 16:17:09]\n82, \n[19:56 remaining, estimate finish 2025-09-23 16:17:11]\n83, \n[18:45 remaining, estimate finish 2025-09-23 16:17:06]\n84, \n[17:35 remaining, estimate finish 2025-09-23 16:17:08]\n85, \n[16:25 remaining, estimate finish 2025-09-23 16:17:11]\n86, \n[15:15 remaining, estimate finish 2025-09-23 16:17:11]\n87, \n[14:03 remaining, estimate finish 2025-09-23 16:17:02]\n88, \n[12:54 remaining, estimate finish 2025-09-23 16:17:14]\n89, \n[11:44 remaining, estimate finish 2025-09-23 16:17:14]\n90, \n[10:34 remaining, estimate finish 2025-09-23 16:17:22]\n91,  [9:24 remaining] 92,  [8:13 remaining] 93,  [7:03 remaining] 94,  [5:53 remaining] 95,  [4:43 remaining] 96,  [3:32 remaining] 97,  [2:21 remaining] 98,  [1:11 remaining] \n99.\n\nDone.\n\n\n\nplot(L_it.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\n\n\n\nSpatio-Temporal Point Patterns Analysis\nOverall Plot:\n\ntm_shape(mpsz_cl)+\n  tm_polygons() +\ntm_shape(IT_biz_62021_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\n\nVisualizing geographic distribution of restaurants by month\n\ntm_shape(mpsz_cl)+\n  tm_polygons() +\ntm_shape(IT_biz_62021_sf) +\n  tm_dots(size=0.1) +\n  tm_facets(by=\"MONTH_ABBR\", \n            free.coords=FALSE, \n            drop.units = TRUE)\n\n\n\n\n\n\n\n\n\n\nComputing STKDE by Month\n\nit_month &lt;- IT_biz_62021_sf %&gt;%\n  select(MONTH_NUM)\n\n\n\nCreating PPP\n\nit_month_ppp &lt;- as.ppp(it_month)\nit_month_ppp\n\nMarked planar point pattern: 950 points\nmarks are numeric, of storage type  'double'\nwindow: rectangle = [8396.53, 43001.3] x [28409.52, 49021.35] units\n\n\n\nsummary(it_month_ppp)\n\nMarked planar point pattern:  950 points\nAverage intensity 1.331899e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   2.000   4.000   3.953   6.000   7.000 \n\nWindow: rectangle = [8396.53, 43001.3] x [28409.52, 49021.35] units\n                    (34600 x 20610 units)\nWindow area = 713268000 square units\n\n\n\nany(duplicated(it_month_ppp))\n\n[1] TRUE\n\n\n\n\nIncluding Owin object\n\nit_month_owin &lt;- it_month_ppp[sg_owin]\nsummary(it_month_owin)\n\nMarked planar point pattern:  950 points\nAverage intensity 1.418934e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   2.000   4.000   3.953   6.000   7.000 \n\nWindow: polygonal boundary\n41 separate polygons (26 holes)\n                  vertices         area relative.area\npolygon 1              285  1.61128e+06      2.41e-03\npolygon 2               27  1.50315e+04      2.25e-05\npolygon 3 (hole)        41 -4.01660e+04     -6.00e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.64e-05\npolygon 5 (hole)         3 -4.14100e-04     -6.19e-13\npolygon 6               30  2.80002e+04      4.18e-05\npolygon 7 (hole)         4 -2.86396e-01     -4.28e-10\npolygon 8 (hole)         3 -1.81439e-04     -2.71e-13\npolygon 9 (hole)         3 -5.99531e-04     -8.95e-13\npolygon 10 (hole)        3 -3.04560e-04     -4.55e-13\npolygon 11 (hole)        3 -4.46108e-04     -6.66e-13\npolygon 12 (hole)        5 -2.44408e-04     -3.65e-13\npolygon 13 (hole)        5 -3.64686e-02     -5.45e-11\npolygon 14              71  8.18750e+03      1.22e-05\npolygon 15 (hole)       38 -7.79904e+03     -1.16e-05\npolygon 16              91  1.49663e+04      2.24e-05\npolygon 17 (hole)      395 -7.38124e+03     -1.10e-05\npolygon 18              40  1.38607e+04      2.07e-05\npolygon 19 (hole)       11 -8.36705e+01     -1.25e-07\npolygon 20 (hole)        3 -2.33435e-03     -3.49e-12\npolygon 21              45  2.51218e+03      3.75e-06\npolygon 22             139  3.22293e+03      4.81e-06\npolygon 23             148  3.10395e+03      4.64e-06\npolygon 24 (hole)        4 -1.72650e-04     -2.58e-13\npolygon 25              75  1.73526e+04      2.59e-05\npolygon 26              83  5.28920e+03      7.90e-06\npolygon 27             106  3.04104e+03      4.54e-06\npolygon 28              71  5.63061e+03      8.41e-06\npolygon 29              10  1.99717e+02      2.98e-07\npolygon 30 (hole)        3 -1.37223e-02     -2.05e-11\npolygon 31 (hole)        3 -8.68789e-04     -1.30e-12\npolygon 32 (hole)        3 -3.39815e-04     -5.08e-13\npolygon 33 (hole)        3 -4.52041e-05     -6.75e-14\npolygon 34 (hole)        3 -3.90173e-05     -5.83e-14\npolygon 35 (hole)        3 -9.59845e-05     -1.43e-13\npolygon 36 (hole)        8 -4.28707e-01     -6.40e-10\npolygon 37 (hole)        4 -2.18619e-04     -3.27e-13\npolygon 38 (hole)        6 -8.37554e-01     -1.25e-09\npolygon 39 (hole)        5 -2.92235e-04     -4.36e-13\npolygon 40           14053  6.67892e+08      9.98e-01\npolygon 41 (hole)        3 -7.43616e-06     -1.11e-14\nenclosing rectangle: [2667.54, 55941.94] x [21448.47, 50256.33] units\n                     (53270 x 28810 units)\nWindow area = 669517000 square units\nFraction of frame area: 0.436\n\n\n\nplot(it_month_owin)\n\n\n\n\n\n\n\n\n\n\nCompute Spatio-temporal KDE\n\nit_kde &lt;- spattemp.density(it_month_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\nsummary(it_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 1223.828 (spatial)\n  lambda = 0.0308 (temporal)\n\nNo. of observations\n  950 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [2667.538, 55941.94] x [21448.47, 50256.33]\n\nTemporal bound\n  [1, 7]\n\nEvaluation\n  128 x 128 x 7 trivariate lattice\n  Density range: [4.097111e-63, 1.992955e-07]\n\n\n\n\nPlotting spatio-temporal KDE object\n\ntims &lt;- c(1,2,3,4,5,6,7)\npar(mfcol=c(2,4))\nfor(i in tims){ \n  plot(it_kde, i, \n       override.par=FALSE, \n       fix.range=TRUE, \n       main=paste(\"KDE at month\",i))\n}\n\n\n\n\n\n\n\n\n\n\nstpp Method\n\nit_coords &lt;- st_coordinates(IT_biz_62021_sf)\n\n\nit_df &lt;- data.frame(\n  x = it_coords[, 1],  \n  y = it_coords[, 2],\n  t = IT_biz_62021_sf$`date`)\n\n\nit_stpp &lt;- as.3dpoints(it_df)\n\n\nplot(it_stpp)\n\n\n\n\n\n\n\n\n\n\nComputing spatio-temporal k-function\n\nit_stik &lt;- STIKhat(it_stpp)\n\nWarning: Space-time data contains duplicated points\n\n\n\nplotK(it_stik)"
  },
  {
    "objectID": "Take Home Exercise/Take Home Exercise 1/Take_Home_Ex01.html#clothing-retail-business",
    "href": "Take Home Exercise/Take Home Exercise 1/Take_Home_Ex01.html#clothing-retail-business",
    "title": "Take-home Exercise 1: Geospatial Analytics for Public Good",
    "section": "3. Clothing Retail Business",
    "text": "3. Clothing Retail Business\n\nTidying Data\n\nret_biz_47711 &lt;- acra_data %&gt;%\n  select(1:24) %&gt;%\n  filter(primary_ssic_code == 47711) %&gt;%\n  rename(date = registration_incorporation_date) %&gt;%\n  mutate(date = as.Date(date),\n         YEAR = year(date),\n         MONTH_NUM = month(date),\n         MONTH_ABBR = month(date,\n                            label = TRUE,\n                            abbr = TRUE)) %&gt;%\n  mutate(\n    postal_code = str_pad(postal_code,\n                          width = 6, side = \"left\", pad = \"0\")) %&gt;%\n  filter(YEAR == 2025)\n\n\n\nGeocoding\n\npostcodes &lt;- unique(ret_biz_47711$postal_code)\nfound &lt;- data.frame()\nnot_found &lt;- data.frame(postcode = character())\nurl &lt;- \"https://onemap.gov.sg/api/common/elastic/search\"\n\n\nfor (pc in postcodes) {\n  query &lt;- list(\n    searchVal = pc,\n    returnGeom = \"Y\",\n    getAddrDetails = \"Y\",\n    pageNum = \"1\"\n  )\n  res &lt;- GET(url, query = query)\n  json &lt;- content(res)\n  if (json$found != 0) {\n    df &lt;- as.data.frame(json$results, stringAsFactors = FALSE)\n    df$input_postcode &lt;- pc\n    found &lt;- bind_rows(found, df)\n  } else {\n    not_found &lt;- bind_rows(not_found, data.frame(postcode = pc))\n  }\n}\n\n\nret_biz_47711 = ret_biz_47711 %&gt;%\n  left_join(found,\n            by = c('postal_code' = 'POSTAL'),\n            relationship = \"many-to-many\")\n\n\nret_biz_47711_sf &lt;- st_as_sf(ret_biz_47711,\n                         coords = c(\"X\",\"Y\"),\n                         crs=3414)\n\nSave ff_biz_56121_sf file\n\n#write_rds(ff_biz_56121_sf, \"data/rds/ret_biz_47711_sf.rds\")\n\n\n\nUnderstanding Data\n\nret_biz_47711_sf &lt;- read_rds(\"data/rds/ret_biz_47711_sf.rds\")\n\n\nhead(ret_biz_47711_sf)\n\nSimple feature collection with 6 features and 105 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 17412.09 ymin: 30188.94 xmax: 29207.41 ymax: 46477.9\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 106\n  uen        issuance_agency_id entity_name               entity_type_descript…¹\n  &lt;chr&gt;      &lt;chr&gt;              &lt;chr&gt;                     &lt;chr&gt;                 \n1 202501382K ACRA               ASIAN EXPORTS (S) PTE. L… Local Company         \n2 202513916D ACRA               BINGZ MOBURGER PTE. LTD.  Local Company         \n3 202515176R ACRA               BINGZ LEGEND PTE. LTD.    Local Company         \n4 202520978K ACRA               BLACK RHINO PTE. LTD.     Local Company         \n5 202505116C ACRA               CELINY PTE. LTD.          Local Company         \n6 202517176H ACRA               CHICKIES PTE. LTD.        Local Company         \n# ℹ abbreviated name: ¹​entity_type_description\n# ℹ 102 more variables: business_constitution_description &lt;chr&gt;,\n#   company_type_description &lt;chr&gt;, paf_constitution_description &lt;chr&gt;,\n#   entity_status_description &lt;chr&gt;, date &lt;date&gt;, uen_issue_date &lt;date&gt;,\n#   address_type &lt;chr&gt;, block &lt;chr&gt;, street_name &lt;chr&gt;, level_no &lt;chr&gt;,\n#   unit_no &lt;chr&gt;, building_name &lt;chr&gt;, postal_code &lt;chr&gt;,\n#   other_address_line1 &lt;chr&gt;, other_address_line2 &lt;chr&gt;, …\n\n\nNumber of businesses\n\n# number of businesses\nnrow(ret_biz_47711_sf)\n\n[1] 31\n\n\nPlotting data\n\nplot(ret_biz_47711_sf)\n\nWarning: plotting the first 9 out of 105 attributes; use max.plot = 105 to plot\nall\n\n\n\n\n\n\n\n\n\n\n\nConvert sf dataframe to ppp class\n\nret_biz_47711_ppp &lt;- as.ppp(ret_biz_47711_sf)\n\nclass(ret_biz_47711_ppp)\n\n[1] \"ppp\"\n\n\n\nsummary(ret_biz_47711_ppp)\n\nWarning: some mark values are NA in the point pattern object\n\n\nMarked planar point pattern:  31 points\nAverage intensity 7.044323e-08 points per square unit\n\nCoordinates are given to 10 decimal places\n\nMark variables: uen, issuance_agency_id, entity_name, entity_type_description, \nbusiness_constitution_description, company_type_description, \npaf_constitution_description, entity_status_description, date, uen_issue_date, \naddress_type, block, street_name, level_no, unit_no, building_name, \npostal_code, other_address_line1, other_address_line2, account_due_date, \nannual_return_date, primary_ssic_code, primary_ssic_description, \nprimary_user_described_activity, YEAR, MONTH_NUM, MONTH_ABBR, SEARCHVAL, \nBLK_NO, ROAD_NAME, BUILDING, ADDRESS, LATITUDE, LONGITUDE, input_postcode, \nSEARCHVAL.1, BLK_NO.1, ROAD_NAME.1, BUILDING.1, ADDRESS.1, POSTAL.1, X.1, Y.1, \nLATITUDE.1, LONGITUDE.1, SEARCHVAL.2, BLK_NO.2, ROAD_NAME.2, BUILDING.2, \nADDRESS.2, POSTAL.2, X.2, Y.2, LATITUDE.2, LONGITUDE.2, SEARCHVAL.3, BLK_NO.3, \nROAD_NAME.3, BUILDING.3, ADDRESS.3, POSTAL.3, X.3, Y.3, LATITUDE.3, \nLONGITUDE.3, SEARCHVAL.4, BLK_NO.4, ROAD_NAME.4, BUILDING.4, ADDRESS.4, \nPOSTAL.4, X.4, Y.4, LATITUDE.4, LONGITUDE.4, SEARCHVAL.5, BLK_NO.5, \nROAD_NAME.5, BUILDING.5, ADDRESS.5, POSTAL.5, X.5, Y.5, LATITUDE.5, \nLONGITUDE.5, SEARCHVAL.6, BLK_NO.6, ROAD_NAME.6, BUILDING.6, ADDRESS.6, \nPOSTAL.6, X.6, Y.6, LATITUDE.6, LONGITUDE.6, SEARCHVAL.7, BLK_NO.7, \nROAD_NAME.7, BUILDING.7, ADDRESS.7, POSTAL.7, X.7, Y.7, LATITUDE.7, LONGITUDE.7\nSummary:\n     uen            issuance_agency_id entity_name       \n Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n entity_type_description business_constitution_description\n Length:31               Length:31                        \n Class :character        Class :character                 \n Mode  :character        Mode  :character                 \n                                                          \n                                                          \n                                                          \n                                                          \n company_type_description paf_constitution_description\n Length:31                Length:31                   \n Class :character         Class :character            \n Mode  :character         Mode  :character            \n                                                      \n                                                      \n                                                      \n                                                      \n entity_status_description      date            uen_issue_date      \n Length:31                 Min.   :2025-01-07   Min.   :2025-01-07  \n Class :character          1st Qu.:2025-02-22   1st Qu.:2025-02-22  \n Mode  :character          Median :2025-04-08   Median :2025-04-08  \n                           Mean   :2025-04-07   Mean   :2025-04-07  \n                           3rd Qu.:2025-05-15   3rd Qu.:2025-05-15  \n                           Max.   :2025-07-31   Max.   :2025-07-31  \n                                                                    \n address_type          block           street_name          level_no        \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   unit_no          building_name      postal_code        other_address_line1\n Length:31          Length:31          Length:31          Length:31          \n Class :character   Class :character   Class :character   Class :character   \n Mode  :character   Mode  :character   Mode  :character   Mode  :character   \n                                                                             \n                                                                             \n                                                                             \n                                                                             \n other_address_line2 account_due_date   annual_return_date primary_ssic_code\n Length:31           Length:31          Length:31          Min.   :56121    \n Class :character    Class :character   Class :character   1st Qu.:56121    \n Mode  :character    Mode  :character   Mode  :character   Median :56121    \n                                                           Mean   :56121    \n                                                           3rd Qu.:56121    \n                                                           Max.   :56121    \n                                                                            \n primary_ssic_description primary_user_described_activity      YEAR     \n Length:31                Length:31                       Min.   :2025  \n Class :character         Class :character                1st Qu.:2025  \n Mode  :character         Mode  :character                Median :2025  \n                                                          Mean   :2025  \n                                                          3rd Qu.:2025  \n                                                          Max.   :2025  \n                                                                        \n   MONTH_NUM       MONTH_ABBR  SEARCHVAL            BLK_NO         \n Min.   :1.000   May    :8    Length:31          Length:31         \n 1st Qu.:2.000   Feb    :6    Class :character   Class :character  \n Median :4.000   Jan    :4    Mode  :character   Mode  :character  \n Mean   :3.806   Mar    :4                                         \n 3rd Qu.:5.000   Jun    :4                                         \n Max.   :7.000   Apr    :3                                         \n                 (Other):2                                         \n  ROAD_NAME           BUILDING           ADDRESS            LATITUDE        \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  LONGITUDE         input_postcode     SEARCHVAL.1          BLK_NO.1        \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n ROAD_NAME.1         BUILDING.1         ADDRESS.1           POSTAL.1        \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     X.1                Y.1             LATITUDE.1        LONGITUDE.1       \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n SEARCHVAL.2          BLK_NO.2         ROAD_NAME.2         BUILDING.2       \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  ADDRESS.2           POSTAL.2             X.2                Y.2           \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  LATITUDE.2        LONGITUDE.2        SEARCHVAL.3          BLK_NO.3        \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n ROAD_NAME.3         BUILDING.3         ADDRESS.3           POSTAL.3        \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     X.3                Y.3             LATITUDE.3        LONGITUDE.3       \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n SEARCHVAL.4          BLK_NO.4         ROAD_NAME.4         BUILDING.4       \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  ADDRESS.4           POSTAL.4             X.4                Y.4           \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  LATITUDE.4        LONGITUDE.4        SEARCHVAL.5          BLK_NO.5        \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n ROAD_NAME.5         BUILDING.5         ADDRESS.5           POSTAL.5        \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     X.5                Y.5             LATITUDE.5        LONGITUDE.5       \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n SEARCHVAL.6          BLK_NO.6         ROAD_NAME.6         BUILDING.6       \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  ADDRESS.6           POSTAL.6             X.6                Y.6           \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n  LATITUDE.6        LONGITUDE.6        SEARCHVAL.7          BLK_NO.7        \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n ROAD_NAME.7         BUILDING.7         ADDRESS.7           POSTAL.7        \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n     X.7                Y.7             LATITUDE.7        LONGITUDE.7       \n Length:31          Length:31          Length:31          Length:31         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n\nWindow: rectangle = [17412.09, 40604.5] x [28689.89, 47664.66] units\n                    (23190 x 18970 units)\nWindow area = 440071000 square units\n\n\n\n\nCreate owin object\n\nmpsz_cl &lt;- read_rds(\"data/rds/mpsz_cl.rds\")\n\n\nsg_owin &lt;- as.owin(mpsz_cl)\n\n\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\n\nCombine point events object and owin object\n\nret_biz_47711_ppp = ret_biz_47711_ppp[sg_owin]\n\n\nret_biz_47711_ppp\n\nWarning: some mark values are NA in the point pattern x\n\n\nMarked planar point pattern: 31 points\nMark variables: \n   uen issuance_agency_id entity_name entity_type_description \nbusiness_constitution_description company_type_description \npaf_constitution_description entity_status_description date uen_issue_date \naddress_type block street_name level_no unit_no building_name postal_code \nother_address_line1 other_address_line2 account_due_date annual_return_date \nprimary_ssic_code primary_ssic_description primary_user_described_activity YEAR \nMONTH_NUM MONTH_ABBR SEARCHVAL BLK_NO ROAD_NAME BUILDING ADDRESS LATITUDE \nLONGITUDE input_postcode SEARCHVAL.1 BLK_NO.1 ROAD_NAME.1 BUILDING.1 ADDRESS.1 \nPOSTAL.1 X.1 Y.1 LATITUDE.1 LONGITUDE.1 SEARCHVAL.2 BLK_NO.2 ROAD_NAME.2 \nBUILDING.2 ADDRESS.2 POSTAL.2 X.2 Y.2 LATITUDE.2 LONGITUDE.2 SEARCHVAL.3 \nBLK_NO.3 ROAD_NAME.3 BUILDING.3 ADDRESS.3 POSTAL.3 X.3 Y.3 LATITUDE.3 \nLONGITUDE.3 SEARCHVAL.4 BLK_NO.4 ROAD_NAME.4 BUILDING.4 ADDRESS.4 POSTAL.4 X.4 \nY.4 LATITUDE.4 LONGITUDE.4 SEARCHVAL.5 BLK_NO.5 ROAD_NAME.5 BUILDING.5 \nADDRESS.5 POSTAL.5 X.5 Y.5 LATITUDE.5 LONGITUDE.5 SEARCHVAL.6 BLK_NO.6 \nROAD_NAME.6 BUILDING.6 ADDRESS.6 POSTAL.6 X.6 Y.6 LATITUDE.6 LONGITUDE.6 \nSEARCHVAL.7 BLK_NO.7 ROAD_NAME.7 BUILDING.7 ADDRESS.7 POSTAL.7 X.7 Y.7 \nLATITUDE.7 LONGITUDE.7\nwindow: polygonal boundary\nenclosing rectangle: [2667.54, 55941.94] x [21448.47, 50256.33] units\n\n\n\n\nClark-Evan Test for Nearest Neighbour Analysis\nWithout CSR\n\nclarkevans.test(ret_biz_47711_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"))\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  ret_biz_47711_ppp\nR = 0.55043, p-value = 8.397e-07\nalternative hypothesis: clustered (R &lt; 1)\n\n\nWith CSR\n\nclarkevans.test(ret_biz_47711_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                method=\"MonteCarlo\",\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Monte Carlo test based on 99 simulations of CSR with fixed n\n\ndata:  ret_biz_47711_ppp\nR = 0.55043, p-value = 0.01\nalternative hypothesis: clustered (R &lt; 1)\n\n\nTaking a 95% confidence level, the Clark-Evans test showed that p-value were consistently below the threshold &lt; 0.05, indicating that restaurants are not randomly distributed.\n\n\nKernel Density Estimation\n\nret_biz_47711_ppp_km &lt;- rescale.ppp(\n  ret_biz_47711_ppp, 1000, \"km\")\n\n\nret_kde_SG_diggle &lt;- density(\n  ret_biz_47711_ppp_km,\n  sigma=bw.diggle,\n  edge=TRUE,\n  kernel=\"gaussian\") \n\n\nplot(ret_kde_SG_diggle)\n\n\n\n\n\n\n\n\n\nsummary(ret_kde_SG_diggle)\n\nreal-valued pixel image\n128 x 128 pixel array (ny, nx)\nenclosing rectangle: [2.667538, 55.94194] x [21.44847, 50.25633] km\ndimensions of each pixel: 0.416 x 0.2250614 km\nImage is defined on a subset of the rectangular grid\nSubset area = 669.941961122495 square km\nSubset area fraction = 0.437\nPixel values (inside window):\n    range = [-1.556182e-16, 1.557279]\n    integral = 31.21534\n    mean = 0.04659409\n\n\n\nbw &lt;- bw.diggle(ret_biz_47711_ppp_km)\nbw\n\n    sigma \n0.5989893 \n\n\n\n\n2nd Order Spatial Point Pattern Analysis\n\nUsing K-Function\nComputing K-Function estimate\n\nK_ret = Kest(ret_biz_47711_ppp, correction = \"Ripley\")\nplot(K_ret, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of clothing retailers in SIngapore are randomly distributed.\nH1= The distribution of clothing retailers in SIngapore are not randomly distributed.\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\n\nK_ret.csr &lt;- envelope(ret_biz_47711_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nWarning: some mark values are NA in the point pattern Y\n\n\nWarning: some mark values are NA in the point pattern object\n\n\nGenerating 99 simulations of CSR  ...\n1, 2,  [3:44 remaining] 3,\n [2:47 remaining] 4,  [2:27 remaining] 5,  [2:17 remaining] 6,\n [2:11 remaining] 7,  [2:07 remaining] 8,  [2:03 remaining] 9,\n [2:03 remaining] 10,  [2:00 remaining] 11,  [1:57 remaining] 12,\n [1:54 remaining] 13,  [1:51 remaining] 14,  [1:48 remaining] 15,\n [1:46 remaining] 16,  [1:45 remaining] 17,  [1:43 remaining] 18,\n [1:42 remaining] 19,  [1:40 remaining] 20,  [1:38 remaining] 21,\n [1:37 remaining] 22,  [1:36 remaining] 23,  [1:34 remaining] 24,\n [1:33 remaining] 25,  [1:31 remaining] 26,  [1:29 remaining] 27,\n [1:28 remaining] 28,  [1:27 remaining] 29,  [1:26 remaining] 30,\n [1:24 remaining] 31,  [1:23 remaining] 32,  [1:21 remaining] 33,\n [1:20 remaining] 34,  [1:19 remaining] 35,  [1:17 remaining] 36,\n [1:16 remaining] 37,  [1:15 remaining] 38,  [1:14 remaining] 39,\n [1:12 remaining] 40,  [1:11 remaining] 41,  [1:10 remaining] 42,\n [1:08 remaining] 43,  [1:07 remaining] 44,  [1:06 remaining] 45,\n [1:05 remaining] 46,  [1:04 remaining] 47,  [1:02 remaining] 48,\n [1:01 remaining] 49,  [1:00 remaining] 50,  [59 sec remaining] 51,\n [57 sec remaining] 52,  [56 sec remaining] 53,  [55 sec remaining] 54,\n [53 sec remaining] 55,  [52 sec remaining] 56,  [51 sec remaining] 57,\n [50 sec remaining] 58,  [49 sec remaining] 59,  [47 sec remaining] 60,\n [46 sec remaining] 61,  [45 sec remaining] 62,  [44 sec remaining] 63,\n [42 sec remaining] 64,  [41 sec remaining] 65,  [40 sec remaining] 66,\n [39 sec remaining] 67,  [38 sec remaining] 68,  [36 sec remaining] 69,\n [35 sec remaining] 70,  [34 sec remaining] 71,  [33 sec remaining] 72,\n [32 sec remaining] 73,  [30 sec remaining] 74,  [29 sec remaining] 75,\n [28 sec remaining] 76,  [27 sec remaining] 77,  [26 sec remaining] 78,\n [24 sec remaining] 79,  [23 sec remaining] 80,  [22 sec remaining] 81,\n [21 sec remaining] 82,  [20 sec remaining] 83,  [19 sec remaining] 84,\n [17 sec remaining] 85,  [16 sec remaining] 86,  [15 sec remaining] 87,\n [14 sec remaining] 88,  [13 sec remaining] 89,  [12 sec remaining] 90,\n [10 sec remaining] 91,  [9 sec remaining] 92,  [8 sec remaining] 93,\n [7 sec remaining] 94,  [6 sec remaining] 95,  [5 sec remaining] 96,\n [3 sec remaining] 97,  [2 sec remaining] 98,  [1 sec remaining] \n99.\n\nDone.\n\n\n\nplot(K_ret.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\n\n\nUsing L-Function\nComputing L Function estimate\n\nL_ret = Lest(ret_biz_47711_ppp, correction = \"Ripley\")\nplot(L_ret, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\nPerforming Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\nHo = The distribution of clothing retailers in SIngapore are randomly distributed.\nH1= The distribution of clothing retailers in SIngapore are not randomly distributed.\nThe null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.\n\nL_ret.csr &lt;- envelope(ret_biz_47711_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nWarning: some mark values are NA in the point pattern Y\n\n\nWarning: some mark values are NA in the point pattern object\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\n\nplot(L_ret.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\n\n\n\nSpatio-Temporal Point Patterns Analysis\nOverall Plot:\n\ntm_shape(mpsz_cl)+\n  tm_polygons() +\ntm_shape(ret_biz_47711_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\n\nVisualizing geographic distribution of restaurants by month\n\ntm_shape(mpsz_cl)+\n  tm_polygons() +\ntm_shape(ret_biz_47711_sf) +\n  tm_dots(size=0.1) +\n  tm_facets(by=\"MONTH_ABBR\", \n            free.coords=FALSE, \n            drop.units = TRUE)\n\n\n\n\n\n\n\n\n\n\nComputing STKDE by Month\n\nret_month &lt;- ret_biz_47711_sf %&gt;%\n  select(MONTH_NUM)\n\n\n\nCreating PPP\n\nret_month_ppp &lt;- as.ppp(ret_month)\nret_month_ppp\n\nMarked planar point pattern: 31 points\nmarks are numeric, of storage type  'double'\nwindow: rectangle = [17412.09, 40604.5] x [28689.89, 47664.66] units\n\n\n\nsummary(ret_month_ppp)\n\nMarked planar point pattern:  31 points\nAverage intensity 7.044323e-08 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   2.000   4.000   3.806   5.000   7.000 \n\nWindow: rectangle = [17412.09, 40604.5] x [28689.89, 47664.66] units\n                    (23190 x 18970 units)\nWindow area = 440071000 square units\n\n\n\nany(duplicated(ret_month_ppp))\n\n[1] TRUE\n\n\n\n\nIncluding Owin object\n\nret_month_owin &lt;- ret_month_ppp[sg_owin]\nsummary(ret_month_owin)\n\nMarked planar point pattern:  31 points\nAverage intensity 4.630206e-08 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   2.000   4.000   3.806   5.000   7.000 \n\nWindow: polygonal boundary\n41 separate polygons (26 holes)\n                  vertices         area relative.area\npolygon 1              285  1.61128e+06      2.41e-03\npolygon 2               27  1.50315e+04      2.25e-05\npolygon 3 (hole)        41 -4.01660e+04     -6.00e-05\npolygon 4 (hole)       317 -5.11280e+04     -7.64e-05\npolygon 5 (hole)         3 -4.14100e-04     -6.19e-13\npolygon 6               30  2.80002e+04      4.18e-05\npolygon 7 (hole)         4 -2.86396e-01     -4.28e-10\npolygon 8 (hole)         3 -1.81439e-04     -2.71e-13\npolygon 9 (hole)         3 -5.99531e-04     -8.95e-13\npolygon 10 (hole)        3 -3.04560e-04     -4.55e-13\npolygon 11 (hole)        3 -4.46108e-04     -6.66e-13\npolygon 12 (hole)        5 -2.44408e-04     -3.65e-13\npolygon 13 (hole)        5 -3.64686e-02     -5.45e-11\npolygon 14              71  8.18750e+03      1.22e-05\npolygon 15 (hole)       38 -7.79904e+03     -1.16e-05\npolygon 16              91  1.49663e+04      2.24e-05\npolygon 17 (hole)      395 -7.38124e+03     -1.10e-05\npolygon 18              40  1.38607e+04      2.07e-05\npolygon 19 (hole)       11 -8.36705e+01     -1.25e-07\npolygon 20 (hole)        3 -2.33435e-03     -3.49e-12\npolygon 21              45  2.51218e+03      3.75e-06\npolygon 22             139  3.22293e+03      4.81e-06\npolygon 23             148  3.10395e+03      4.64e-06\npolygon 24 (hole)        4 -1.72650e-04     -2.58e-13\npolygon 25              75  1.73526e+04      2.59e-05\npolygon 26              83  5.28920e+03      7.90e-06\npolygon 27             106  3.04104e+03      4.54e-06\npolygon 28              71  5.63061e+03      8.41e-06\npolygon 29              10  1.99717e+02      2.98e-07\npolygon 30 (hole)        3 -1.37223e-02     -2.05e-11\npolygon 31 (hole)        3 -8.68789e-04     -1.30e-12\npolygon 32 (hole)        3 -3.39815e-04     -5.08e-13\npolygon 33 (hole)        3 -4.52041e-05     -6.75e-14\npolygon 34 (hole)        3 -3.90173e-05     -5.83e-14\npolygon 35 (hole)        3 -9.59845e-05     -1.43e-13\npolygon 36 (hole)        8 -4.28707e-01     -6.40e-10\npolygon 37 (hole)        4 -2.18619e-04     -3.27e-13\npolygon 38 (hole)        6 -8.37554e-01     -1.25e-09\npolygon 39 (hole)        5 -2.92235e-04     -4.36e-13\npolygon 40           14053  6.67892e+08      9.98e-01\npolygon 41 (hole)        3 -7.43616e-06     -1.11e-14\nenclosing rectangle: [2667.54, 55941.94] x [21448.47, 50256.33] units\n                     (53270 x 28810 units)\nWindow area = 669517000 square units\nFraction of frame area: 0.436\n\n\n\nplot(ret_month_owin)\n\n\n\n\n\n\n\n\n\n\nCompute Spatio-temporal KDE\n\nret_kde &lt;- spattemp.density(ret_month_owin)\n\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n\nsummary(ret_kde)\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 2958.192 (spatial)\n  lambda = 0.758 (temporal)\n\nNo. of observations\n  31 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [2667.538, 55941.94] x [21448.47, 50256.33]\n\nTemporal bound\n  [1, 7]\n\nEvaluation\n  128 x 128 x 7 trivariate lattice\n  Density range: [1.486136e-20, 1.603914e-09]\n\n\n\n\nPlotting spatio-temporal KDE object\n\ntims &lt;- c(1,2,3,4,5,6,7)\npar(mfcol=c(2,4))\nfor(i in tims){ \n  plot(ret_kde, i, \n       override.par=FALSE, \n       fix.range=TRUE, \n       main=paste(\"KDE at month\",i))\n}\n\n\n\n\n\n\n\n\n\n\nstpp Method\n\nret_coords &lt;- st_coordinates(ret_biz_47711_sf)\n\n\nret_df &lt;- data.frame(\n  x = ret_coords[, 1],  \n  y = ret_coords[, 2],\n  t = ret_biz_47711_sf$`date`)\n\n\nret_stpp &lt;- as.3dpoints(ret_df)\n\n\nplot(ret_stpp)\n\n\n\n\n\n\n\n\n\n\nComputing spatio-temporal k-function\n\nret_stik &lt;- STIKhat(ret_stpp)\n\nWarning: Space-time data contains duplicated points\n\n\n\nplotK(ret_stik)"
  }
]